<?xml version="1.0" encoding="utf-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.apache.jena</groupId>
  <artifactId>jena-arq</artifactId>
  <packaging>jar</packaging>
  <name>ARQ</name>
  <version>${ver.arq}</version>
  <!-- <version>2.8.9-incubating-SNAPSHOT</version> -->

  <parent>
    <groupId>org.apache.jena</groupId>
    <artifactId>jena-top</artifactId>
    <version>0-SNAPSHOT</version>
    <relativePath>../JenaTop/pom.xml</relativePath>
  </parent> 

  <description>ARQ is a SPARQL 1.1 query engine for Jena</description>

  <scm>
    <connection>scm:svn:https://svn.apache.org/repos/asf/incubator/jena/Jena2/ARQ/</connection>
    <url>https://svn.apache.org/repos/asf/incubator/jena/Jena2/ARQ/</url>
  </scm>
  
  <properties>
    <this.root>${project.artifactId}-${project.version}</this.root>
    <ver.wstx-asl>3.2.9</ver.wstx-asl>
    <ver.lucene>2.3.1</ver.lucene>
    <ver.http-client>4.1.2</ver.http-client>
    <ver.commons-codec>1.5</ver.commons-codec>
    <assembly.root.name>apache-${project.artifactId}-${project.version}</assembly.root.name>

  </properties>

  <dependencies>

    <dependency>
      <groupId>com.hp.hpl.jena</groupId>
      <artifactId>jena</artifactId>
      <version>${ver.jena}</version>
    </dependency>

    <dependency>
      <groupId>com.hp.hpl.jena</groupId>
      <artifactId>jena</artifactId>
      <classifier>tests</classifier>
      <version>${ver.jena}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.codehaus.woodstox</groupId>
      <artifactId>wstx-asl</artifactId>
      <version>${ver.wstx-asl}</version>
      <!--
	And recode XMLInputStax to use STaX2 as still have the same problems of STaX1 if just upgrade woodstox.
      <groupId>org.codehaus.woodstox</groupId>
      <artifactId>woodstox-core-asl</artifactId>
      <version>4.0.0</version>
      -->
    </dependency>

    <dependency>
      <groupId>org.apache.lucene</groupId>
      <artifactId>lucene-core</artifactId>
      <version>${ver.lucene}</version>
    </dependency>

    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${ver.commons-codec}</version>
    </dependency>
      
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${ver.http-client}</version>
      <scope>compile</scope>
      <exclusions>
	<!-- Replace with slf4j adapter -->
	<exclusion>
	  <groupId>commons-logging</groupId>
	  <artifactId>commons-logging</artifactId>
	</exclusion>
      </exclusions>      
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
      <version>${ver.http-client}</version>
      <scope>compile</scope>
    </dependency>

  </dependencies>

  <build>
    <sourceDirectory>src</sourceDirectory>
    <testSourceDirectory>src-test</testSourceDirectory>
    
    <!-- The filter file is written by antrun -->
    <filters>
      <filter>${project.basedir}/target/filter.properties</filter>
    </filters>

    <resources>
      <resource>
        <targetPath>com/hp/hpl/jena/sparql/</targetPath>
        <filtering>true</filtering>
        <directory>resources</directory>
      </resource>
    </resources>

    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <includes>
            <include>**/TS_*.java</include>
          </includes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <version>true</version>
          <show>public</show>
          <quiet>true</quiet>
          <encoding>UTF-8</encoding>
          <windowtitle>${project.name} ${project.version}</windowtitle>
          <doctitle>${project.name} ${project.version}</doctitle>
	  <excludePackageNames>arq:arq.*:riotcmd:riotcmd.*</excludePackageNames>
	  <groups>
	    <group>
              <title>SPARQL Query and Update</title>
              <packages>com.hp.hpl.jena.query:com.hp.hpl.jena.update</packages>
            </group>
            <group>
              <title>LARQ -- Lucene Search for ARQ</title>
              <packages>com.hp.hpl.jena.query.larq</packages>
            </group>
	    <!--
            <group>
              <title>RIOT</title>
              <packages>org.openjena.riot</packages>
            </group>
	    -->
	    <!-- "Other packages" catches everything else unless excluded -->
	  </groups>
          <bottom>
	    Licenced under the Apache License, Version 2.0
	  </bottom>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>ant-timestamp</id>
            <phase>generate-resources</phase>
            <configuration>
              <tasks>
                <mkdir dir="${project.basedir}/target"/>
                <tstamp>
                  <format property="build.time.xsd"  pattern="yyyy-MM-dd'T'HH:mm:ssZ"/>
                  <format property="build.time.txt"  pattern="yyyy-MM-dd HH:mm z"/>
                </tstamp>
                <!-- Do not indent (it does not work) -->
                <echo file="${project.basedir}/target/filter.properties">
#begin
build.time.xsd=${build.time.xsd}
build.time.txt=${build.time.txt}
#end
                </echo>
                <echo message="version=${project.version}"/>
                <echo message="build.time=${build.time.txt}"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <!-- Another task, another execution -->
        </executions>
      </plugin>

      <plugin>
        <!-- This must be the last plug-in attached to the package phase 
             because it replies on the packaging of the jar to happen first.
        -->
        <!-- We want one with appendAssemblyId=false and one with it defaulting to true.
        hence two executions configured -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>assembly.xml</descriptor>
          </descriptors>
        </configuration>
	<executions>
	  <execution>
	    <id>create-assembly</id>
	    <phase>package</phase>
	    <goals>
	      <goal>single</goal>
	    </goals>
	    <configuration>
	      <finalName>${assembly.root.name}</finalName>
	      <appendAssemblyId>false</appendAssemblyId>
	      <descriptors>
		<descriptor>assembly.xml</descriptor>
	      </descriptors>
	    </configuration>
	  </execution>
	</executions>
      </plugin>

    </plugins>
  </build>

  <reporting>
    <!-- <outputDirectory>${project.build.directory}/site</outputDirectory> -->
  </reporting>


</project>
