/* The following code was generated by JFlex 1.4.1 on 22/11/06 13:32 */


package com.hp.hpl.jena.iri.impl;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.1
 * on 22/11/06 13:32 from the specification file
 * <tt>src/com/hp/hpl/jena/iri/impl/host.jflex</tt>
 */
class LexerHost implements com.hp.hpl.jena.iri.ViolationCodes, com.hp.hpl.jena.iri.IRIComponents, Lexer {

  /** This character denotes the end of file */
  private static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 2048;

  /** lexical states */
  private static final int YYINITIAL = 0;

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\41\0\1\5\2\0\1\5\1\0\7\5\1\21\1\4\1\0\1\11"+
    "\1\13\1\14\2\15\1\16\4\12\1\10\1\5\1\0\1\5\3\0"+
    "\6\7\24\22\1\1\1\0\1\6\1\0\1\20\1\0\6\3\17\17"+
    "\1\2\4\17\3\0\1\5\1\0\uff80\23";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\1\1\2\1\3\1\1\1\4\5\3\1\5\1\6"+
    "\5\2\2\3\1\4\1\3\1\7\1\6\1\1\2\4"+
    "\1\10\1\11\5\3\2\5\1\12\1\13\1\14\1\6"+
    "\1\15\7\2\1\7\1\10\1\7\1\16\1\7\1\17"+
    "\1\20\1\21\1\15\1\22\1\4\1\12\1\11\2\10"+
    "\1\23\1\24\1\11\1\25\4\22\3\3\1\13\1\5"+
    "\1\12\1\14\1\12\1\26\1\27\1\30\1\13\1\31"+
    "\1\32\1\33\1\14\1\34\1\6\1\11\1\15\1\35"+
    "\12\2\1\36\5\2\1\16\1\17\1\37\1\21\1\40"+
    "\1\24\1\16\1\7\1\10\1\7\1\13\1\15\1\17"+
    "\1\20\1\21\1\26\1\25\1\10\1\26\1\25\1\23"+
    "\1\24\1\41\1\27\1\25\6\22\1\30\1\31\1\33"+
    "\1\5\1\12\1\34\1\26\1\42\1\43\1\27\1\44"+
    "\1\30\1\13\1\26\1\34\1\31\1\43\1\32\1\33"+
    "\1\45\1\14\1\27\1\34\1\6\1\11\1\15\1\25"+
    "\1\35\1\46\1\47\15\2\1\50\16\2\2\37\1\40"+
    "\1\51\1\52\1\40\1\53\1\54\1\7\1\10\2\7"+
    "\1\15\2\10\1\25\1\13\1\26\1\13\1\34\1\15"+
    "\1\20\1\23\1\32\1\35\1\26\1\44\1\25\1\42"+
    "\2\41\2\44\7\22\1\13\1\26\1\42\1\43\1\44"+
    "\1\55\1\13\1\26\1\34\2\45\1\14\1\27\1\34"+
    "\1\44\1\15\1\25\1\15\1\25\36\2\1\37\1\51"+
    "\1\37\1\40\1\37\1\56\1\52\1\40\1\53\1\51"+
    "\1\52\1\57\1\40\1\60\1\54\1\53\1\54\1\61"+
    "\1\7\1\10\1\7\1\15\1\10\1\25\1\13\1\26"+
    "\1\34\1\55\2\44\6\22\1\56\1\60\1\55\1\13"+
    "\1\26\1\34\1\44\1\34\1\44\1\52\1\54\1\15"+
    "\1\25\36\2\1\62\4\2\1\37\1\40\1\37\1\56"+
    "\1\52\1\16\1\17\1\21\1\37\1\40\1\37\1\51"+
    "\1\52\1\40\1\53\1\54\2\56\1\60\1\63\1\64"+
    "\1\52\1\57\1\40\1\60\1\54\1\24\1\51\1\53"+
    "\1\51\1\63\1\57\1\52\1\54\1\64\1\57\1\60"+
    "\1\65\1\66\1\54\1\61\1\53\1\65\1\61\1\66"+
    "\1\61\1\20\1\23\1\35\1\41\1\32\1\42\1\45"+
    "\1\55\4\67\3\22\1\56\1\60\1\63\1\64\1\65"+
    "\1\66\1\64\1\66\1\34\1\44\1\57\1\61\25\2"+
    "\1\70\12\2\1\37\1\40\1\56\1\51\1\53\1\51"+
    "\1\57\1\53\1\61\1\63\1\56\1\60\1\64\1\65"+
    "\1\63\1\64\1\71\1\52\1\54\1\60\1\51\1\53"+
    "\1\51\1\57\1\53\1\61\1\63\1\65\1\71\1\52"+
    "\1\54\1\64\1\71\1\57\1\61\1\71\1\66\1\65"+
    "\1\66\2\72\1\66\2\72\1\22\1\73\3\67\1\73"+
    "\1\63\1\65\1\71\1\72\37\2\1\51\1\53\1\56"+
    "\1\60\1\20\1\23\1\35\1\41\1\32\1\42\1\45"+
    "\1\56\1\60\1\71\1\55\1\63\1\65\1\64\1\66"+
    "\1\71\1\52\1\54\1\51\1\53\1\51\1\57\1\53"+
    "\1\61\1\63\1\65\1\71\1\57\1\61\1\64\1\66"+
    "\1\57\1\61\3\72\1\22\1\73\1\67\1\30\1\31"+
    "\1\33\1\43\36\2\1\56\1\60\1\63\1\65\1\63"+
    "\1\65\1\64\1\66\1\71\1\72\1\57\1\61\1\20"+
    "\1\23\1\35\1\41\1\32\1\42\1\45\1\55\1\64"+
    "\1\66\1\57\1\61\1\22\35\2\1\63\1\65\1\63"+
    "\1\65\1\71\1\72\1\71\1\72\1\71\1\72\1\22"+
    "\30\2\1\74\1\71\1\72\26\2\1\75\110\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[824];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\24\0\50\0\74\0\120\0\144\0\170\0\214"+
    "\0\240\0\264\0\310\0\334\0\360\0\u0104\0\u0118\0\u012c"+
    "\0\u0140\0\u0154\0\u0168\0\u017c\0\u0190\0\u01a4\0\u01b8\0\u01cc"+
    "\0\u01e0\0\u01f4\0\u0208\0\u021c\0\u0230\0\u0244\0\u0258\0\u026c"+
    "\0\u0280\0\u0294\0\u02a8\0\u02bc\0\u02d0\0\u02e4\0\u02f8\0\u030c"+
    "\0\u0320\0\u0334\0\u0348\0\u035c\0\u0370\0\u0384\0\u0398\0\u03ac"+
    "\0\u03c0\0\u03d4\0\u03e8\0\u03fc\0\u0410\0\u0424\0\u0438\0\u044c"+
    "\0\u0460\0\u01e0\0\u0474\0\u0488\0\u049c\0\u04b0\0\u04c4\0\u04d8"+
    "\0\u04ec\0\u0500\0\u0514\0\u0528\0\u053c\0\u0550\0\u0564\0\u0578"+
    "\0\u058c\0\u05a0\0\u05b4\0\u05c8\0\u05dc\0\u05f0\0\u0604\0\u0618"+
    "\0\u062c\0\u0640\0\u0654\0\u0668\0\u067c\0\u0690\0\u06a4\0\u06b8"+
    "\0\u06cc\0\u06e0\0\u06f4\0\u0708\0\u071c\0\u0730\0\u0744\0\u0758"+
    "\0\u076c\0\u0780\0\u0794\0\u07a8\0\u07bc\0\u07d0\0\u0104\0\u07e4"+
    "\0\u07f8\0\u080c\0\u0820\0\u0834\0\u0848\0\u085c\0\u0870\0\u0884"+
    "\0\u0898\0\u08ac\0\u08c0\0\u08d4\0\u08e8\0\u08fc\0\u0910\0\u0924"+
    "\0\u0938\0\u094c\0\u0960\0\u0974\0\u0988\0\u099c\0\u09b0\0\u09c4"+
    "\0\u09d8\0\u09ec\0\u0a00\0\u0a14\0\u0a28\0\u0a3c\0\u0a50\0\u0a64"+
    "\0\u0a78\0\u0a8c\0\u0aa0\0\u0ab4\0\u0ac8\0\u0adc\0\u0af0\0\u0b04"+
    "\0\u0b18\0\u0b2c\0\u0b40\0\u0b54\0\u0b68\0\u0b7c\0\u0b90\0\u0ba4"+
    "\0\u0bb8\0\u0bcc\0\u0be0\0\u0bf4\0\u0c08\0\u0c1c\0\u0c30\0\u0c44"+
    "\0\u0c58\0\u0c6c\0\u0c80\0\u0c94\0\u0ca8\0\u0cbc\0\u0cd0\0\u0104"+
    "\0\u0104\0\u0ce4\0\u0cf8\0\u0d0c\0\u0d20\0\u0d34\0\u0d48\0\u0d5c"+
    "\0\u0d70\0\u0d84\0\u0d98\0\u0dac\0\u0dc0\0\u0dd4\0\u0104\0\u0de8"+
    "\0\u0dfc\0\u0e10\0\u0e24\0\u0e38\0\u0e4c\0\u0e60\0\u0e74\0\u0e88"+
    "\0\u0e9c\0\u0eb0\0\u0ec4\0\u0ed8\0\u0eec\0\u0f00\0\u0f14\0\u0f28"+
    "\0\u0f3c\0\u0f50\0\u0f64\0\u0f78\0\u0f8c\0\u0fa0\0\u0fb4\0\u0fc8"+
    "\0\u0fdc\0\u0ff0\0\u1004\0\u1018\0\u102c\0\u1040\0\u1054\0\u1068"+
    "\0\u107c\0\u1090\0\u10a4\0\u10b8\0\u10cc\0\u10e0\0\u10f4\0\u1108"+
    "\0\u111c\0\u1130\0\u1144\0\u1158\0\u116c\0\u1180\0\u1194\0\u11a8"+
    "\0\u11bc\0\u11d0\0\u11e4\0\u11f8\0\u120c\0\u1220\0\u1234\0\u1248"+
    "\0\u125c\0\u1270\0\u1284\0\u1298\0\u12ac\0\u12c0\0\u12d4\0\u12e8"+
    "\0\u12fc\0\u1310\0\u1324\0\u1338\0\u134c\0\u1360\0\u1374\0\u1388"+
    "\0\u139c\0\u13b0\0\u13c4\0\u13d8\0\u13ec\0\u1400\0\u1414\0\u1428"+
    "\0\u143c\0\u1450\0\u1464\0\u1478\0\u148c\0\u14a0\0\u14b4\0\u14c8"+
    "\0\u14dc\0\u14f0\0\u1504\0\u1518\0\u152c\0\u1540\0\u1554\0\u1568"+
    "\0\u157c\0\u1590\0\u15a4\0\u15b8\0\u15cc\0\u15e0\0\u15f4\0\u1608"+
    "\0\u161c\0\u1630\0\u1644\0\u1658\0\u166c\0\u1680\0\u1694\0\u16a8"+
    "\0\u16bc\0\u16d0\0\u16e4\0\u16f8\0\u170c\0\u1720\0\u1734\0\u1748"+
    "\0\u175c\0\u1770\0\u1784\0\u1798\0\u17ac\0\u17c0\0\u17d4\0\u17e8"+
    "\0\u17fc\0\u1810\0\u1824\0\u1838\0\u184c\0\u1860\0\u1874\0\u1888"+
    "\0\u189c\0\u18b0\0\u18c4\0\u18d8\0\u18ec\0\u1900\0\u1914\0\u1928"+
    "\0\u193c\0\u1950\0\u1964\0\u1978\0\u198c\0\u19a0\0\u19b4\0\u19c8"+
    "\0\u19dc\0\u19f0\0\u1a04\0\u1a18\0\u1a2c\0\u1a40\0\u1a54\0\u1a68"+
    "\0\u1a7c\0\u1a90\0\u1aa4\0\u1ab8\0\u1acc\0\u1ae0\0\u1af4\0\u1b08"+
    "\0\u1b1c\0\u1b30\0\u1b44\0\u1b58\0\u1b6c\0\u1b80\0\u1b94\0\u1ba8"+
    "\0\u1bbc\0\u1bd0\0\u1be4\0\u1bf8\0\u1c0c\0\u0104\0\u1c20\0\u1c34"+
    "\0\u1c48\0\u1c5c\0\u1c70\0\u1c84\0\u1c98\0\u1cac\0\u1cc0\0\u1cd4"+
    "\0\u1ce8\0\u1cfc\0\u1d10\0\u1d24\0\u1d38\0\u1d4c\0\u1d60\0\u1d74"+
    "\0\u1d88\0\u1d9c\0\u1db0\0\u1dc4\0\u1dd8\0\u1dec\0\u1e00\0\u1e14"+
    "\0\u1e28\0\u1e3c\0\u1e50\0\u1e64\0\u1e78\0\u1e8c\0\u1ea0\0\u1eb4"+
    "\0\u1ec8\0\u1edc\0\u1ef0\0\u1f04\0\u1f18\0\u1f2c\0\u1f40\0\u1f54"+
    "\0\u1f68\0\u1f7c\0\u1f90\0\u1fa4\0\u1fb8\0\u1fcc\0\u1fe0\0\u1ff4"+
    "\0\u2008\0\u201c\0\u2030\0\u2044\0\u2058\0\u206c\0\u2080\0\u2094"+
    "\0\u20a8\0\u20bc\0\u20d0\0\u20e4\0\u20f8\0\u210c\0\u2120\0\u2134"+
    "\0\u2148\0\u215c\0\u2170\0\u2184\0\u2198\0\u21ac\0\u21c0\0\u21d4"+
    "\0\u21e8\0\u21fc\0\u2210\0\u2224\0\u2238\0\u224c\0\u2260\0\u2274"+
    "\0\u2288\0\u229c\0\u22b0\0\u22c4\0\u22d8\0\u22ec\0\u2300\0\u2314"+
    "\0\u2328\0\u233c\0\u2350\0\u2364\0\u2378\0\u238c\0\u23a0\0\u23b4"+
    "\0\u0104\0\u23c8\0\u23dc\0\u23f0\0\u2404\0\u2418\0\u242c\0\u2440"+
    "\0\u2454\0\u2468\0\u247c\0\u2490\0\u24a4\0\u24b8\0\u24cc\0\u24e0"+
    "\0\u24f4\0\u2508\0\u251c\0\u2530\0\u2544\0\u2558\0\u256c\0\u2580"+
    "\0\u2594\0\u25a8\0\u25bc\0\u25d0\0\u25e4\0\u25f8\0\u260c\0\u2620"+
    "\0\u2634\0\u2648\0\u265c\0\u2670\0\u2684\0\u2698\0\u26ac\0\u26c0"+
    "\0\u26d4\0\u26e8\0\u26fc\0\u2710\0\u2724\0\u2738\0\u274c\0\u2760"+
    "\0\u2774\0\u2788\0\u279c\0\u27b0\0\u27c4\0\u27d8\0\u27ec\0\u2800"+
    "\0\u2814\0\u2814\0\u2828\0\u283c\0\u20a8\0\u2850\0\u2864\0\u2878"+
    "\0\u288c\0\u28a0\0\u28b4\0\u28c8\0\u28dc\0\u28f0\0\u2904\0\u2918"+
    "\0\u292c\0\u2940\0\u2954\0\u2968\0\u297c\0\u2990\0\u29a4\0\u29b8"+
    "\0\u29cc\0\u29e0\0\u29f4\0\u2a08\0\u2a1c\0\u2a30\0\u2a44\0\u2a58"+
    "\0\u2a6c\0\u2a80\0\u2a94\0\u2aa8\0\u2abc\0\u2ad0\0\u2ae4\0\u2af8"+
    "\0\u2b0c\0\u2b20\0\u2b34\0\u2b48\0\u2b5c\0\u2b70\0\u2b84\0\u2b98"+
    "\0\u2bac\0\u2bc0\0\u2bd4\0\u2be8\0\u2bfc\0\u2c10\0\u2c24\0\u2c38"+
    "\0\u2c4c\0\u2c60\0\u2c74\0\u2c88\0\u2c9c\0\u2cb0\0\u2cc4\0\u2cd8"+
    "\0\u2cec\0\u2d00\0\u2d14\0\u2d28\0\u2d3c\0\u2d50\0\u2d64\0\u2d78"+
    "\0\u2d8c\0\u2da0\0\u2db4\0\u2dc8\0\u2ddc\0\u2df0\0\u2e04\0\u2e18"+
    "\0\u2e2c\0\u2e40\0\u2e40\0\u2e54\0\u2e68\0\u2e7c\0\u2e90\0\u2ea4"+
    "\0\u2eb8\0\u2ecc\0\u2ee0\0\u2ef4\0\u2f08\0\u2f1c\0\u2f30\0\u2f44"+
    "\0\u2f58\0\u2f6c\0\u2f80\0\u2f94\0\u2fa8\0\u2fbc\0\u2fd0\0\u2fe4"+
    "\0\u2ff8\0\u300c\0\u3020\0\u3034\0\u3048\0\u305c\0\u3070\0\u3084"+
    "\0\u3098\0\u30ac\0\u30c0\0\u30d4\0\u30e8\0\u30fc\0\u3110\0\u3124"+
    "\0\u3138\0\u314c\0\u3160\0\u3174\0\u3188\0\u319c\0\u31b0\0\u31c4"+
    "\0\u31d8\0\u31ec\0\u3200\0\u3214\0\u3228\0\u323c\0\u3250\0\u3264"+
    "\0\u3278\0\u328c\0\u32a0\0\u32b4\0\u32c8\0\u32dc\0\u32f0\0\u3304"+
    "\0\u3318\0\u332c\0\u3340\0\u3354\0\u3368\0\u337c\0\u3390\0\u33a4"+
    "\0\u33b8\0\u33cc\0\u33e0\0\u33f4\0\u3408\0\u341c\0\u3430\0\u3444"+
    "\0\u3458\0\u346c\0\u3480\0\u3494\0\u34a8\0\u34bc\0\u34d0\0\u34e4"+
    "\0\u34f8\0\u350c\0\u3520\0\u3534\0\u3548\0\u355c\0\u3570\0\u3584"+
    "\0\u3598\0\u35ac\0\u35c0\0\u35d4\0\u35e8\0\u35fc\0\u3610\0\u3624"+
    "\0\u3638\0\u364c\0\u3660\0\u3674\0\u3688\0\u369c\0\u36b0\0\u36c4"+
    "\0\u36d8\0\u36ec\0\u3700\0\u3714\0\u3728\0\u373c\0\u3750\0\u3764"+
    "\0\u3778\0\u378c\0\u37a0\0\u37b4\0\u37c8\0\u37dc\0\u0104\0\u37f0"+
    "\0\u3804\0\u3818\0\u382c\0\u3840\0\u3854\0\u3868\0\u387c\0\u3890"+
    "\0\u38a4\0\u38b8\0\u38cc\0\u38e0\0\u38f4\0\u3908\0\u391c\0\u3930"+
    "\0\u3944\0\u3958\0\u396c\0\u3980\0\u3994\0\u39a8\0\u39bc\0\u0104"+
    "\0\u39d0\0\u39e4\0\u39f8\0\u3a0c\0\u3a20\0\u3a34\0\u3a48\0\u3a5c"+
    "\0\u3a70\0\u3a84\0\u3a98\0\u3aac\0\u3ac0\0\u3ad4\0\u3ae8\0\u3afc"+
    "\0\u3b10\0\u3b24\0\u3b38\0\u3b4c\0\u3b60\0\u3b74\0\u3b88\0\u3b9c"+
    "\0\u3bb0\0\u3bc4\0\u3bd8\0\u3bec\0\u3c00\0\u3c14\0\u3c28\0\u3c3c"+
    "\0\u3c50\0\u3c64\0\u3c78\0\u3c8c\0\u3ca0\0\u3cb4\0\u3cc8\0\u3cdc"+
    "\0\u3cf0\0\u3d04\0\u3d18\0\u3d2c\0\u3d40\0\u3d54\0\u3d68\0\u3d7c"+
    "\0\u3d90\0\u3da4\0\u3db8\0\u3dcc\0\u3de0\0\u3df4\0\u3e08\0\u3e1c"+
    "\0\u3e30\0\u3e44\0\u3e58\0\u3e6c\0\u3e80\0\u3e94\0\u3ea8\0\u3ebc"+
    "\0\u3ed0\0\u3ee4\0\u3ef8\0\u3f0c\0\u3f20\0\u3f34\0\u3f48\0\u3f5c";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[824];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\2\4\1\5\2\2\1\6\1\2\1\7"+
    "\1\10\1\11\1\12\2\10\1\4\1\13\1\14\1\6"+
    "\1\15\24\2\2\16\1\17\1\20\3\16\1\21\1\22"+
    "\6\20\5\16\2\2\2\23\1\24\2\2\1\25\1\2"+
    "\7\23\1\26\1\27\1\25\1\30\4\2\1\31\4\2"+
    "\6\5\7\2\2\25\1\32\2\2\1\25\1\2\7\25"+
    "\1\33\1\34\1\25\1\35\2\2\2\23\1\36\2\2"+
    "\1\25\1\2\6\37\1\23\1\26\1\27\1\25\1\30"+
    "\2\2\2\23\1\36\2\2\1\25\1\2\6\40\1\23"+
    "\1\26\1\27\1\25\1\30\2\2\2\23\1\36\2\2"+
    "\1\25\1\2\6\41\1\23\1\26\1\27\1\25\1\30"+
    "\2\2\2\23\1\36\2\2\1\25\1\2\1\41\1\40"+
    "\3\41\1\42\1\23\1\26\1\27\1\25\1\30\2\2"+
    "\2\26\1\24\2\2\1\33\1\2\10\26\1\27\1\33"+
    "\1\30\2\2\2\43\1\44\2\2\1\45\1\2\10\43"+
    "\1\46\1\45\1\47\2\2\2\30\1\50\2\2\1\35"+
    "\1\2\10\30\1\51\1\35\1\30\27\16\1\52\3\16"+
    "\1\53\1\16\6\52\10\16\1\54\3\16\1\55\1\56"+
    "\6\54\10\16\1\55\3\16\1\55\1\57\6\55\15\16"+
    "\1\60\13\16\2\2\2\26\1\24\2\2\1\33\1\2"+
    "\10\26\1\61\1\33\1\30\2\2\2\4\3\2\1\6"+
    "\1\2\7\4\1\13\1\14\1\6\1\15\2\2\2\33"+
    "\1\32\2\2\1\33\1\2\10\33\1\62\1\33\1\35"+
    "\2\2\2\26\1\24\2\2\1\33\1\2\10\26\1\63"+
    "\1\33\1\30\2\2\2\64\1\65\2\2\1\66\1\2"+
    "\10\64\1\67\1\66\1\70\2\2\2\30\1\50\2\2"+
    "\1\35\1\2\10\30\1\71\1\35\1\30\4\2\1\72"+
    "\4\2\6\72\7\2\2\6\3\2\1\6\1\2\7\6"+
    "\1\73\1\74\1\6\1\75\2\2\2\33\1\32\2\2"+
    "\1\33\1\2\10\33\1\76\1\33\1\35\2\2\2\66"+
    "\1\77\2\2\1\66\1\2\10\66\1\100\1\66\1\101"+
    "\2\2\2\35\1\102\2\2\1\35\1\2\10\35\1\103"+
    "\2\35\2\2\2\4\1\72\2\2\1\6\1\2\1\104"+
    "\1\105\1\106\1\107\2\105\1\4\1\13\1\14\1\6"+
    "\1\15\2\2\2\26\1\110\2\2\1\33\1\2\6\111"+
    "\2\26\1\61\1\33\1\30\2\2\2\26\1\36\2\2"+
    "\1\33\1\2\6\111\2\26\1\61\1\33\1\30\2\2"+
    "\2\26\1\36\2\2\1\33\1\2\6\112\2\26\1\61"+
    "\1\33\1\30\2\2\2\26\1\36\2\2\1\33\1\2"+
    "\1\112\1\111\4\112\2\26\1\61\1\33\1\30\2\2"+
    "\2\43\1\44\2\2\1\45\1\2\10\43\1\113\1\45"+
    "\1\47\2\2\2\114\3\2\1\115\1\2\7\114\2\14"+
    "\1\115\1\116\2\2\2\45\1\117\2\2\1\45\1\2"+
    "\10\45\1\120\1\45\1\121\2\2\2\122\1\123\2\2"+
    "\1\124\1\2\10\122\1\125\1\124\1\126\2\2\2\47"+
    "\1\127\2\2\1\121\1\2\10\47\1\130\1\121\1\47"+
    "\2\2\2\131\3\2\1\132\1\2\7\131\1\15\1\116"+
    "\1\132\1\15\2\2\2\70\1\133\2\2\1\101\1\2"+
    "\10\70\1\134\1\101\1\70\3\16\1\52\1\135\2\16"+
    "\1\53\1\16\6\52\10\16\1\53\1\136\2\16\1\53"+
    "\1\16\6\53\10\16\1\137\3\16\1\140\1\56\6\137"+
    "\10\16\1\140\3\16\1\140\1\57\6\140\10\16\1\141"+
    "\3\16\1\142\1\143\6\141\10\16\1\142\3\16\1\142"+
    "\1\144\6\142\10\16\1\145\1\146\1\16\1\147\1\150"+
    "\1\16\1\151\1\152\1\153\1\154\2\152\5\16\2\2"+
    "\2\155\1\65\2\2\1\156\1\2\10\155\1\157\1\156"+
    "\1\160\2\2\2\156\1\77\2\2\1\156\1\2\10\156"+
    "\1\161\1\156\1\162\2\2\2\155\1\65\2\2\1\156"+
    "\1\2\10\155\1\67\1\156\1\160\2\2\2\64\1\163"+
    "\2\2\1\66\1\2\10\64\1\67\1\66\1\70\2\2"+
    "\2\164\3\2\1\165\1\2\7\164\1\166\1\167\1\165"+
    "\1\170\2\2\2\66\1\171\2\2\1\66\1\2\10\66"+
    "\1\100\1\66\1\101\2\2\2\64\1\172\2\2\1\66"+
    "\1\2\10\64\1\67\1\66\1\70\2\2\2\70\1\173"+
    "\2\2\1\101\1\2\10\70\1\134\1\101\1\70\2\2"+
    "\2\160\1\133\2\2\1\162\1\2\10\160\1\134\1\162"+
    "\1\160\2\2\2\33\1\32\2\2\1\33\1\2\10\33"+
    "\1\34\1\33\1\35\2\2\2\45\1\117\2\2\1\45"+
    "\1\2\10\45\1\174\1\45\1\121\2\2\2\35\1\102"+
    "\2\2\1\35\1\2\10\35\1\175\2\35\2\2\2\156"+
    "\1\77\2\2\1\156\1\2\10\156\1\100\1\156\1\162"+
    "\2\2\2\165\3\2\1\165\1\2\7\165\1\176\1\177"+
    "\1\165\1\200\2\2\2\66\1\201\2\2\1\66\1\2"+
    "\10\66\1\100\1\66\1\101\2\2\2\101\1\202\2\2"+
    "\1\101\1\2\10\101\1\203\2\101\2\2\2\132\3\2"+
    "\1\132\1\2\7\132\1\75\1\204\1\132\1\75\2\2"+
    "\2\162\1\205\2\2\1\162\1\2\10\162\1\203\2\162"+
    "\2\2\2\23\1\206\2\2\1\25\1\2\6\207\1\23"+
    "\1\26\1\27\1\25\1\30\2\2\2\23\1\206\2\2"+
    "\1\25\1\2\6\210\1\23\1\26\1\27\1\25\1\30"+
    "\2\2\2\23\1\206\2\2\1\25\1\2\6\211\1\23"+
    "\1\26\1\27\1\25\1\30\2\2\2\23\1\206\2\2"+
    "\1\25\1\2\1\211\1\210\3\211\1\212\1\23\1\26"+
    "\1\27\1\25\1\30\2\2\2\4\1\72\2\2\1\6"+
    "\1\2\6\213\1\4\1\13\1\14\1\6\1\15\2\2"+
    "\2\26\1\110\2\2\1\33\1\2\6\111\2\26\1\63"+
    "\1\33\1\30\2\2\2\26\1\36\2\2\1\33\1\2"+
    "\6\111\2\26\1\63\1\33\1\30\2\2\2\214\1\123"+
    "\2\2\1\215\1\2\10\214\1\125\1\215\1\216\2\2"+
    "\2\217\1\44\2\2\1\220\1\2\7\217\1\43\1\46"+
    "\1\220\1\47\2\2\2\220\1\117\2\2\1\220\1\2"+
    "\7\220\1\45\1\174\1\220\1\121\2\2\2\47\1\127"+
    "\2\2\1\121\1\2\10\47\1\221\1\121\1\47\2\2"+
    "\2\115\3\2\1\115\1\2\7\115\2\74\1\115\1\204"+
    "\2\2\2\215\1\222\2\2\1\215\1\2\10\215\1\223"+
    "\1\215\1\224\2\2\2\121\1\225\2\2\1\121\1\2"+
    "\10\121\1\226\2\121\2\2\2\122\1\227\2\2\1\124"+
    "\1\2\10\122\1\125\1\124\1\126\2\2\2\230\3\2"+
    "\1\231\1\2\7\230\2\167\1\231\1\232\2\2\2\124"+
    "\1\233\2\2\1\124\1\2\10\124\1\223\1\124\1\234"+
    "\2\2\2\122\1\235\2\2\1\124\1\2\10\122\1\125"+
    "\1\124\1\126\2\2\2\126\1\236\2\2\1\234\1\2"+
    "\10\126\1\237\1\234\1\126\2\2\2\240\3\2\1\241"+
    "\1\2\7\240\2\116\1\241\1\116\2\2\2\216\1\242"+
    "\2\2\1\224\1\2\10\216\1\237\1\224\1\216\2\2"+
    "\2\243\1\50\2\2\1\244\1\2\7\243\1\30\1\51"+
    "\1\244\1\30\2\2\2\244\1\102\2\2\1\244\1\2"+
    "\7\244\1\35\1\175\1\244\1\35\2\2\2\245\3\2"+
    "\1\246\1\2\7\245\1\170\1\232\1\246\1\170\2\2"+
    "\2\70\1\247\2\2\1\101\1\2\10\70\1\134\1\101"+
    "\1\70\2\16\4\135\1\250\14\135\3\16\4\136\1\251"+
    "\14\136\4\16\1\252\3\16\1\253\1\56\6\252\10\16"+
    "\1\253\3\16\1\253\1\57\6\253\10\16\1\254\3\16"+
    "\1\255\1\256\6\254\10\16\1\255\3\16\1\255\1\257"+
    "\6\255\10\16\1\260\1\146\1\16\1\147\1\261\1\16"+
    "\1\262\1\263\1\264\1\265\2\263\10\16\1\261\1\266"+
    "\1\16\1\267\1\261\1\16\1\270\1\271\1\272\1\273"+
    "\2\271\10\16\1\274\2\16\1\147\1\275\1\276\6\274"+
    "\11\16\1\277\4\16\6\146\10\16\1\275\2\16\1\267"+
    "\1\275\1\300\6\275\10\16\1\274\1\301\1\16\1\147"+
    "\1\275\1\276\6\302\10\16\1\274\1\301\1\16\1\147"+
    "\1\275\1\276\6\303\10\16\1\274\1\301\1\16\1\147"+
    "\1\275\1\276\6\304\10\16\1\274\1\301\1\16\1\147"+
    "\1\275\1\276\1\304\1\303\3\304\1\305\5\16\2\2"+
    "\2\26\1\163\2\2\1\33\1\2\10\26\1\63\1\33"+
    "\1\30\2\2\2\33\1\171\2\2\1\33\1\2\10\33"+
    "\1\76\1\33\1\35\2\2\2\306\1\307\2\2\1\310"+
    "\1\2\10\306\1\311\1\310\1\312\2\2\2\30\1\173"+
    "\2\2\1\35\1\2\10\30\1\71\1\35\1\30\2\2"+
    "\2\310\1\313\2\2\1\310\1\2\10\310\1\314\1\310"+
    "\1\315\2\2\2\35\1\202\2\2\1\35\1\2\10\35"+
    "\1\103\2\35\2\2\2\64\3\2\1\66\1\2\10\64"+
    "\1\122\1\66\1\70\2\2\2\316\1\65\2\2\1\317"+
    "\1\2\7\316\1\320\1\321\1\317\1\322\2\2\2\317"+
    "\1\77\2\2\1\317\1\2\7\317\1\323\1\324\1\317"+
    "\1\325\2\2\2\320\1\65\2\2\1\323\1\2\10\320"+
    "\1\321\1\323\1\322\2\2\2\326\1\123\2\2\1\327"+
    "\1\2\10\326\1\330\1\327\1\331\2\2\2\322\1\133"+
    "\2\2\1\325\1\2\10\322\1\332\1\325\1\322\2\2"+
    "\2\66\3\2\1\66\1\2\10\66\1\124\1\66\1\101"+
    "\2\2\2\333\3\2\1\334\1\2\10\333\1\335\1\334"+
    "\1\336\2\2\2\70\3\2\1\101\1\2\10\70\1\126"+
    "\1\101\1\70\2\2\2\124\1\222\2\2\1\124\1\2"+
    "\10\124\1\223\1\124\1\234\2\2\2\101\1\205\2\2"+
    "\1\101\1\2\10\101\1\203\2\101\2\2\2\323\1\77"+
    "\2\2\1\323\1\2\10\323\1\324\1\323\1\325\2\2"+
    "\2\327\1\222\2\2\1\327\1\2\10\327\1\337\1\327"+
    "\1\340\2\2\2\325\1\205\2\2\1\325\1\2\10\325"+
    "\1\341\2\325\2\2\2\334\3\2\1\334\1\2\10\334"+
    "\1\342\1\334\1\343\2\2\2\101\3\2\1\101\1\2"+
    "\10\101\1\234\2\101\2\2\2\101\1\344\2\2\1\101"+
    "\1\2\10\101\1\203\2\101\2\2\2\121\1\225\2\2"+
    "\1\121\1\2\10\121\1\345\2\121\2\2\2\246\3\2"+
    "\1\246\1\2\7\246\1\200\1\346\1\246\1\200\2\2"+
    "\2\4\1\72\2\2\1\6\1\2\1\347\1\350\1\351"+
    "\1\352\2\350\1\4\1\13\1\14\1\6\1\15\2\2"+
    "\2\26\1\353\2\2\1\33\1\2\6\354\2\26\1\61"+
    "\1\33\1\30\2\2\2\26\1\206\2\2\1\33\1\2"+
    "\6\354\2\26\1\61\1\33\1\30\2\2\2\26\1\206"+
    "\2\2\1\33\1\2\6\355\2\26\1\61\1\33\1\30"+
    "\2\2\2\26\1\206\2\2\1\33\1\2\1\355\1\354"+
    "\4\355\2\26\1\61\1\33\1\30\2\2\2\23\1\353"+
    "\2\2\1\25\1\2\6\207\1\23\1\26\1\27\1\25"+
    "\1\30\2\2\2\43\1\227\2\2\1\45\1\2\10\43"+
    "\1\113\1\45\1\47\2\2\2\45\1\233\2\2\1\45"+
    "\1\2\10\45\1\120\1\45\1\121\2\2\2\47\1\236"+
    "\2\2\1\121\1\2\10\47\1\130\1\121\1\47\2\2"+
    "\2\43\1\44\2\2\1\45\1\2\10\43\1\356\1\45"+
    "\1\47\2\2\2\45\1\117\2\2\1\45\1\2\10\45"+
    "\1\357\1\45\1\121\2\2\2\126\1\242\2\2\1\234"+
    "\1\2\10\126\1\237\1\234\1\126\2\2\2\231\3\2"+
    "\1\231\1\2\7\231\2\177\1\231\1\346\2\2\2\124"+
    "\1\360\2\2\1\124\1\2\10\124\1\223\1\124\1\234"+
    "\2\2\2\121\1\361\2\2\1\121\1\2\10\121\1\226"+
    "\2\121\2\2\2\241\3\2\1\241\1\2\7\241\2\204"+
    "\1\241\1\204\2\2\2\224\1\362\2\2\1\224\1\2"+
    "\10\224\1\363\2\224\2\2\2\122\3\2\1\124\1\2"+
    "\11\122\1\124\1\126\2\2\2\364\1\123\2\2\1\365"+
    "\1\2\7\364\1\326\1\330\1\365\1\331\2\2\2\365"+
    "\1\222\2\2\1\365\1\2\7\365\1\327\1\337\1\365"+
    "\1\340\2\2\2\331\1\242\2\2\1\340\1\2\10\331"+
    "\1\366\1\340\1\331\2\2\2\124\3\2\1\124\1\2"+
    "\12\124\1\234\2\2\2\234\1\361\2\2\1\234\1\2"+
    "\10\234\1\363\2\234\2\2\2\335\3\2\1\342\1\2"+
    "\11\335\1\342\1\367\2\2\2\126\3\2\1\234\1\2"+
    "\11\126\1\234\1\126\2\2\2\126\1\370\2\2\1\234"+
    "\1\2\10\126\1\237\1\234\1\126\2\2\2\371\1\127"+
    "\2\2\1\372\1\2\7\371\1\47\1\221\1\372\1\47"+
    "\2\2\2\372\1\225\2\2\1\372\1\2\7\372\1\121"+
    "\1\345\1\372\1\121\2\2\2\373\3\2\1\374\1\2"+
    "\7\373\2\232\1\374\1\232\2\2\2\30\1\50\2\2"+
    "\1\35\1\2\10\30\1\375\1\35\1\30\2\2\2\35"+
    "\1\102\2\2\1\35\1\2\10\35\1\376\2\35\2\2"+
    "\2\377\1\133\2\2\1\u0100\1\2\7\377\1\322\1\332"+
    "\1\u0100\1\322\2\2\2\u0100\1\205\2\2\1\u0100\1\2"+
    "\7\u0100\1\325\1\341\1\u0100\1\325\2\2\2\336\3\2"+
    "\1\343\1\2\10\336\1\367\1\343\1\336\10\16\1\56"+
    "\23\16\1\57\16\16\1\u0101\3\16\1\u0102\1\256\6\u0101"+
    "\10\16\1\u0102\3\16\1\u0102\1\257\6\u0102\10\16\1\u0103"+
    "\3\16\1\u0104\1\u0105\6\u0103\10\16\1\u0104\3\16\1\u0104"+
    "\1\u0106\6\u0104\10\16\1\u0107\2\16\1\147\1\u0108\1\u0109"+
    "\6\u0107\10\16\1\u0108\2\16\1\267\1\u0108\1\u010a\6\u0108"+
    "\10\16\1\u0107\1\301\1\16\1\147\1\u0108\1\u0109\6\u010b"+
    "\10\16\1\u0107\1\301\1\16\1\147\1\u0108\1\u0109\6\u010c"+
    "\10\16\1\u0107\1\301\1\16\1\147\1\u0108\1\u0109\6\u010d"+
    "\10\16\1\u0107\1\301\1\16\1\147\1\u0108\1\u0109\1\u010d"+
    "\1\u010c\3\u010d\1\u010e\11\16\1\u010f\4\16\6\266\10\16"+
    "\1\u0108\1\u0110\1\16\1\267\1\u0108\1\u010a\6\u0111\10\16"+
    "\1\u0108\1\u0110\1\16\1\267\1\u0108\1\u010a\6\u0112\10\16"+
    "\1\u0108\1\u0110\1\16\1\267\1\u0108\1\u010a\6\u0113\10\16"+
    "\1\u0108\1\u0110\1\16\1\267\1\u0108\1\u010a\1\u0113\1\u0112"+
    "\3\u0113\1\u0114\10\16\1\u0115\2\16\1\147\1\u0116\1\276"+
    "\6\u0115\10\16\1\u0116\2\16\1\267\1\u0116\1\300\6\u0116"+
    "\10\16\1\260\1\146\2\16\1\261\1\16\1\262\1\263"+
    "\1\264\1\265\2\263\11\16\1\u0117\4\16\6\u0117\10\16"+
    "\1\261\1\266\2\16\1\261\1\16\1\270\1\271\1\272"+
    "\1\273\2\271\11\16\1\u0117\4\16\1\u0118\1\u0119\1\u011a"+
    "\1\u011b\2\u0119\10\16\1\u0115\1\u011c\1\16\1\147\1\u0116"+
    "\1\276\6\u011d\10\16\1\u0115\1\301\1\16\1\147\1\u0116"+
    "\1\276\6\u011d\10\16\1\u0115\1\301\1\16\1\147\1\u0116"+
    "\1\276\6\u011e\10\16\1\u0115\1\301\1\16\1\147\1\u0116"+
    "\1\276\1\u011e\1\u011d\4\u011e\5\16\2\2\2\306\1\u011f"+
    "\2\2\1\310\1\2\10\306\1\u0120\1\310\1\312\2\2"+
    "\2\u0121\3\2\1\u0122\1\2\7\u0121\1\u0123\1\u0124\1\u0122"+
    "\1\u0125\2\2\2\310\1\u0126\2\2\1\310\1\2\10\310"+
    "\1\u0127\1\310\1\315\2\2\2\64\1\u0128\2\2\1\66"+
    "\1\2\10\64\1\67\1\66\1\70\2\2\2\312\1\u0129"+
    "\2\2\1\315\1\2\10\312\1\u012a\1\315\1\312\2\2"+
    "\2\u0122\3\2\1\u0122\1\2\7\u0122\1\u012b\1\u012c\1\u0122"+
    "\1\u012d\2\2\2\66\1\u012e\2\2\1\66\1\2\10\66"+
    "\1\100\1\66\1\101\2\2\2\315\1\u012f\2\2\1\315"+
    "\1\2\10\315\1\u0130\2\315\2\2\2\320\1\65\2\2"+
    "\1\323\1\2\10\320\1\u0131\1\323\1\322\2\2\2\323"+
    "\1\77\2\2\1\323\1\2\10\323\1\u0132\1\323\1\325"+
    "\2\2\2\320\1\65\2\2\1\323\1\2\10\320\1\u0133"+
    "\1\323\1\322\2\2\2\333\1\65\2\2\1\334\1\2"+
    "\11\333\1\334\1\336\2\2\2\322\1\133\2\2\1\325"+
    "\1\2\10\322\1\u0134\1\325\1\322\2\2\2\323\1\77"+
    "\2\2\1\323\1\2\10\323\1\u0135\1\323\1\325\2\2"+
    "\2\334\1\77\2\2\1\334\1\2\12\334\1\343\2\2"+
    "\2\325\1\205\2\2\1\325\1\2\10\325\1\u0136\2\325"+
    "\2\2\2\326\1\123\2\2\1\327\1\2\10\326\1\u0137"+
    "\1\327\1\331\2\2\2\327\1\222\2\2\1\327\1\2"+
    "\10\327\1\u0138\1\327\1\340\2\2\2\335\1\123\2\2"+
    "\1\342\1\2\11\335\1\342\1\367\2\2\2\331\1\242"+
    "\2\2\1\340\1\2\10\331\1\u0139\1\340\1\331\2\2"+
    "\2\336\1\133\2\2\1\343\1\2\11\336\1\343\1\336"+
    "\2\2\2\333\1\172\2\2\1\334\1\2\11\333\1\334"+
    "\1\336\2\2\2\334\1\201\2\2\1\334\1\2\12\334"+
    "\1\343\2\2\2\335\1\235\2\2\1\342\1\2\11\335"+
    "\1\342\1\367\2\2\2\336\1\247\2\2\1\343\1\2"+
    "\11\336\1\343\1\336\2\2\2\342\1\222\2\2\1\342"+
    "\1\2\12\342\1\u013a\2\2\2\340\1\362\2\2\1\340"+
    "\1\2\10\340\1\u013b\2\340\2\2\2\343\1\205\2\2"+
    "\1\343\1\2\13\343\2\2\2\342\1\360\2\2\1\342"+
    "\1\2\12\342\1\u013a\2\2\2\343\1\344\2\2\1\343"+
    "\1\2\13\343\2\2\2\343\3\2\1\343\1\2\10\343"+
    "\1\u013a\2\343\2\2\2\234\1\362\2\2\1\234\1\2"+
    "\10\234\1\363\2\234\2\2\2\340\1\362\2\2\1\340"+
    "\1\2\10\340\1\u013c\2\340\2\2\2\23\1\u013d\2\2"+
    "\1\25\1\2\6\u013e\1\23\1\26\1\27\1\25\1\30"+
    "\2\2\2\23\1\u013d\2\2\1\25\1\2\6\u013f\1\23"+
    "\1\26\1\27\1\25\1\30\2\2\2\23\1\u013d\2\2"+
    "\1\25\1\2\6\u0140\1\23\1\26\1\27\1\25\1\30"+
    "\2\2\2\23\1\u013d\2\2\1\25\1\2\1\u0140\1\u013f"+
    "\3\u0140\1\u0141\1\23\1\26\1\27\1\25\1\30\2\2"+
    "\2\4\1\72\2\2\1\6\1\2\6\u0142\1\4\1\13"+
    "\1\14\1\6\1\15\2\2\2\26\1\353\2\2\1\33"+
    "\1\2\6\354\2\26\1\63\1\33\1\30\2\2\2\26"+
    "\1\206\2\2\1\33\1\2\6\354\2\26\1\63\1\33"+
    "\1\30\2\2\2\214\1\123\2\2\1\215\1\2\10\214"+
    "\1\u0143\1\215\1\216\2\2\2\215\1\222\2\2\1\215"+
    "\1\2\10\215\1\u0144\1\215\1\224\2\2\2\342\3\2"+
    "\1\342\1\2\12\342\1\u013a\2\2\2\234\3\2\1\234"+
    "\1\2\13\234\2\2\2\374\3\2\1\374\1\2\7\374"+
    "\2\346\1\374\1\346\2\2\2\234\1\u0145\2\2\1\234"+
    "\1\2\10\234\1\363\2\234\2\2\2\326\1\123\2\2"+
    "\1\327\1\2\10\326\1\u0146\1\327\1\331\2\2\2\327"+
    "\1\222\2\2\1\327\1\2\10\327\1\u0147\1\327\1\340"+
    "\2\2\2\367\1\242\2\2\1\u013a\1\2\11\367\1\u013a"+
    "\1\367\2\2\2\367\1\370\2\2\1\u013a\1\2\11\367"+
    "\1\u013a\1\367\2\2\2\367\3\2\1\u013a\1\2\11\367"+
    "\1\u013a\1\367\2\2\2\47\1\127\2\2\1\121\1\2"+
    "\10\47\1\u0148\1\121\1\47\2\2\2\121\1\225\2\2"+
    "\1\121\1\2\10\121\1\u0149\2\121\2\2\2\u014a\1\242"+
    "\2\2\1\u014b\1\2\7\u014a\1\331\1\366\1\u014b\1\331"+
    "\2\2\2\u014b\1\362\2\2\1\u014b\1\2\7\u014b\1\340"+
    "\1\u013c\1\u014b\1\340\2\2\2\160\1\133\2\2\1\162"+
    "\1\2\10\160\1\u014c\1\162\1\160\2\2\2\162\1\205"+
    "\2\2\1\162\1\2\10\162\1\u014d\2\162\2\2\2\322"+
    "\1\133\2\2\1\325\1\2\10\322\1\u014e\1\325\1\322"+
    "\2\2\2\325\1\205\2\2\1\325\1\2\10\325\1\u014f"+
    "\2\325\3\16\1\u0150\3\16\1\u0151\1\256\6\u0150\10\16"+
    "\1\u0151\3\16\1\u0151\1\257\6\u0151\10\16\1\u0152\3\16"+
    "\1\u0153\1\u0154\6\u0152\10\16\1\u0153\3\16\1\u0153\1\u0155"+
    "\6\u0153\10\16\1\u0156\1\146\1\16\1\147\1\u0157\1\16"+
    "\1\u0158\1\u0159\1\u015a\1\u015b\2\u0159\10\16\1\u0157\1\266"+
    "\1\16\1\267\1\u0157\1\16\1\u015c\1\u015d\1\u015e\1\u015f"+
    "\2\u015d\10\16\1\u0160\2\16\1\147\1\u0161\1\u0109\6\u0160"+
    "\10\16\1\u0161\2\16\1\267\1\u0161\1\u010a\6\u0161\10\16"+
    "\1\u0156\1\146\2\16\1\u0157\1\16\1\u0158\1\u0159\1\u015a"+
    "\1\u015b\2\u0159\10\16\1\u0157\1\266\2\16\1\u0157\1\16"+
    "\1\u015c\1\u015d\1\u015e\1\u015f\2\u015d\10\16\1\u0160\1\u011c"+
    "\1\16\1\147\1\u0161\1\u0109\6\u0162\10\16\1\u0160\1\301"+
    "\1\16\1\147\1\u0161\1\u0109\6\u0162\10\16\1\u0160\1\301"+
    "\1\16\1\147\1\u0161\1\u0109\6\u0163\10\16\1\u0160\1\301"+
    "\1\16\1\147\1\u0161\1\u0109\1\u0163\1\u0162\4\u0163\11\16"+
    "\1\u0164\4\16\6\u0164\11\16\1\u0164\4\16\1\u0165\1\u0166"+
    "\1\u0167\1\u0168\2\u0166\10\16\1\u0161\1\u0169\1\16\1\267"+
    "\1\u0161\1\u010a\6\u016a\10\16\1\u0161\1\u0110\1\16\1\267"+
    "\1\u0161\1\u010a\6\u016a\10\16\1\u0161\1\u0110\1\16\1\267"+
    "\1\u0161\1\u010a\6\u016b\10\16\1\u0161\1\u0110\1\16\1\267"+
    "\1\u0161\1\u010a\1\u016b\1\u016a\4\u016b\10\16\1\u016c\2\16"+
    "\1\147\1\u016d\1\276\6\u016c\10\16\1\u016d\2\16\1\267"+
    "\1\u016d\1\300\6\u016d\11\16\1\u0117\1\16\1\u016e\2\16"+
    "\6\u0117\11\16\1\u016f\1\16\1\u016e\2\16\6\u0170\11\16"+
    "\1\u016f\1\16\1\u016e\2\16\6\u0118\11\16\1\u016f\1\16"+
    "\1\u016e\2\16\6\u0119\11\16\1\u016f\1\16\1\u016e\2\16"+
    "\1\u0119\1\u0118\3\u0119\1\u0171\11\16\1\u0117\4\16\6\u0170"+
    "\10\16\1\u016c\1\u011c\1\16\1\147\1\u016d\1\276\6\u0172"+
    "\10\16\1\u016c\1\301\1\16\1\147\1\u016d\1\276\6\u0172"+
    "\5\16\2\2\2\u0173\3\2\1\u0174\1\2\7\u0173\1\u0175"+
    "\1\u0176\1\u0174\1\u0177\2\2\2\u0178\1\u0128\2\2\1\u0179"+
    "\1\2\10\u0178\1\67\1\u0179\1\u017a\2\2\2\u017b\1\307"+
    "\2\2\1\u017c\1\2\7\u017b\1\u017d\1\u017e\1\u017c\1\u017f"+
    "\2\2\2\u017c\1\313\2\2\1\u017c\1\2\7\u017c\1\u0180"+
    "\1\u0181\1\u017c\1\u0182\2\2\2\u017d\1\307\2\2\1\u0180"+
    "\1\2\10\u017d\1\u017e\1\u0180\1\u017f\2\2\2\u0183\1\u0184"+
    "\2\2\1\u0185\1\2\10\u0183\1\u0186\1\u0185\1\u0187\2\2"+
    "\2\u017f\1\u0188\2\2\1\u0182\1\2\10\u017f\1\u0189\1\u0182"+
    "\1\u017f\2\2\2\u0174\3\2\1\u0174\1\2\7\u0174\1\u018a"+
    "\1\u018b\1\u0174\1\u018c\2\2\2\u0179\1\u012e\2\2\1\u0179"+
    "\1\2\10\u0179\1\100\1\u0179\1\u018d\2\2\2\u018e\3\2"+
    "\1\u018f\1\2\7\u018e\1\u0190\1\u0191\1\u018f\1\u0192\2\2"+
    "\2\u0193\3\2\1\u0194\1\2\7\u0193\1\u0177\1\u0195\1\u0194"+
    "\1\u0177\2\2\2\u017a\1\u0196\2\2\1\u018d\1\2\10\u017a"+
    "\1\134\1\u018d\1\u017a\2\2\2\u0180\1\313\2\2\1\u0180"+
    "\1\2\10\u0180\1\u0181\1\u0180\1\u0182\2\2\2\u0185\1\u0197"+
    "\2\2\1\u0185\1\2\10\u0185\1\u0198\1\u0185\1\u0199\2\2"+
    "\2\u0182\1\u019a\2\2\1\u0182\1\2\10\u0182\1\u019b\2\u0182"+
    "\2\2\2\u018f\3\2\1\u018f\1\2\7\u018f\1\u019c\1\u019d"+
    "\1\u018f\1\u019e\2\2\2\u0194\3\2\1\u0194\1\2\7\u0194"+
    "\1\u018c\1\u019f\1\u0194\1\u018c\2\2\2\u018d\1\u01a0\2\2"+
    "\1\u018d\1\2\10\u018d\1\203\2\u018d\2\2\2\u01a1\1\65"+
    "\2\2\1\u01a2\1\2\10\u01a1\1\u0190\1\u01a2\1\u01a3\2\2"+
    "\2\u01a2\1\77\2\2\1\u01a2\1\2\10\u01a2\1\u019c\1\u01a2"+
    "\1\u01a4\2\2\2\u01a1\1\65\2\2\1\u01a2\1\2\10\u01a1"+
    "\1\333\1\u01a2\1\u01a3\2\2\2\u01a3\1\133\2\2\1\u01a4"+
    "\1\2\10\u01a3\1\336\1\u01a4\1\u01a3\2\2\2\u01a2\1\77"+
    "\2\2\1\u01a2\1\2\10\u01a2\1\334\1\u01a2\1\u01a4\2\2"+
    "\2\u01a4\1\205\2\2\1\u01a4\1\2\10\u01a4\1\343\2\u01a4"+
    "\2\2\2\u01a5\1\123\2\2\1\u01a6\1\2\10\u01a5\1\335"+
    "\1\u01a6\1\u01a7\2\2\2\u01a6\1\222\2\2\1\u01a6\1\2"+
    "\10\u01a6\1\342\1\u01a6\1\u01a8\2\2\2\u01a7\1\242\2\2"+
    "\1\u01a8\1\2\10\u01a7\1\367\1\u01a8\1\u01a7\2\2\2\u013a"+
    "\1\u0145\2\2\1\u013a\1\2\13\u013a\2\2\2\u01a8\1\362"+
    "\2\2\1\u01a8\1\2\10\u01a8\1\u013a\2\u01a8\2\2\2\u013a"+
    "\1\362\2\2\1\u013a\1\2\13\u013a\2\2\2\4\1\72"+
    "\2\2\1\6\1\2\1\u01a9\1\u01aa\1\u01ab\1\u01ac\2\u01aa"+
    "\1\4\1\13\1\14\1\6\1\15\2\2\2\26\1\u01ad"+
    "\2\2\1\33\1\2\6\u01ae\2\26\1\61\1\33\1\30"+
    "\2\2\2\26\1\u013d\2\2\1\33\1\2\6\u01ae\2\26"+
    "\1\61\1\33\1\30\2\2\2\26\1\u013d\2\2\1\33"+
    "\1\2\6\u01af\2\26\1\61\1\33\1\30\2\2\2\26"+
    "\1\u013d\2\2\1\33\1\2\1\u01af\1\u01ae\4\u01af\2\26"+
    "\1\61\1\33\1\30\2\2\2\23\1\u01ad\2\2\1\25"+
    "\1\2\6\u013e\1\23\1\26\1\27\1\25\1\30\2\2"+
    "\2\u01b0\1\u0184\2\2\1\u01b1\1\2\10\u01b0\1\u01b2\1\u01b1"+
    "\1\u01b3\2\2\2\u01b1\1\u0197\2\2\1\u01b1\1\2\10\u01b1"+
    "\1\u01b4\1\u01b1\1\u01b5\2\2\2\u013a\3\2\1\u013a\1\2"+
    "\13\u013a\2\2\2\u01a5\1\123\2\2\1\u01a6\1\2\10\u01a5"+
    "\1\u0191\1\u01a6\1\u01a7\2\2\2\u01a6\1\222\2\2\1\u01a6"+
    "\1\2\10\u01a6\1\u019d\1\u01a6\1\u01a8\2\2\2\216\1\242"+
    "\2\2\1\224\1\2\10\216\1\u01b6\1\224\1\216\2\2"+
    "\2\224\1\362\2\2\1\224\1\2\10\224\1\u01b7\2\224"+
    "\2\2\2\331\1\242\2\2\1\340\1\2\10\331\1\u01b8"+
    "\1\340\1\331\2\2\2\340\1\362\2\2\1\340\1\2"+
    "\10\340\1\u01b9\2\340\2\2\2\312\1\u0188\2\2\1\315"+
    "\1\2\10\312\1\u01ba\1\315\1\312\2\2\2\315\1\u019a"+
    "\2\2\1\315\1\2\10\315\1\u01bb\2\315\2\2\2\u01a3"+
    "\1\133\2\2\1\u01a4\1\2\10\u01a3\1\u0192\1\u01a4\1\u01a3"+
    "\2\2\2\u01a4\1\205\2\2\1\u01a4\1\2\10\u01a4\1\u019e"+
    "\2\u01a4\10\16\1\256\23\16\1\257\16\16\1\u01bc\3\16"+
    "\1\u01bd\1\u0154\6\u01bc\10\16\1\u01bd\3\16\1\u01bd\1\u0155"+
    "\6\u01bd\10\16\1\u01be\3\16\1\u01bf\1\u01c0\6\u01be\10\16"+
    "\1\u01bf\3\16\1\u01bf\1\u01c1\6\u01bf\10\16\1\u01c2\2\16"+
    "\1\147\1\u01c3\1\u01c4\6\u01c2\10\16\1\u01c3\2\16\1\267"+
    "\1\u01c3\1\u01c5\6\u01c3\10\16\1\u01c2\1\301\1\16\1\147"+
    "\1\u01c3\1\u01c4\6\u01c6\10\16\1\u01c2\1\301\1\16\1\147"+
    "\1\u01c3\1\u01c4\6\u01c7\10\16\1\u01c2\1\301\1\16\1\147"+
    "\1\u01c3\1\u01c4\6\u01c8\10\16\1\u01c2\1\301\1\16\1\147"+
    "\1\u01c3\1\u01c4\1\u01c8\1\u01c7\3\u01c8\1\u01c9\10\16\1\u01c3"+
    "\1\u0110\1\16\1\267\1\u01c3\1\u01c5\6\u01ca\10\16\1\u01c3"+
    "\1\u0110\1\16\1\267\1\u01c3\1\u01c5\6\u01cb\10\16\1\u01c3"+
    "\1\u0110\1\16\1\267\1\u01c3\1\u01c5\6\u01cc\10\16\1\u01c3"+
    "\1\u0110\1\16\1\267\1\u01c3\1\u01c5\1\u01cc\1\u01cb\3\u01cc"+
    "\1\u01cd\10\16\1\u01ce\2\16\1\147\1\u01cf\1\u0109\6\u01ce"+
    "\10\16\1\u01cf\2\16\1\267\1\u01cf\1\u010a\6\u01cf\10\16"+
    "\1\u01ce\1\u011c\1\16\1\147\1\u01cf\1\u0109\6\u01d0\10\16"+
    "\1\u01ce\1\301\1\16\1\147\1\u01cf\1\u0109\6\u01d0\11\16"+
    "\1\u0164\1\16\1\u01d1\2\16\6\u0164\11\16\1\u01d2\1\16"+
    "\1\u01d1\2\16\6\u01d3\11\16\1\u01d2\1\16\1\u01d1\2\16"+
    "\6\u0165\11\16\1\u01d2\1\16\1\u01d1\2\16\6\u0166\11\16"+
    "\1\u01d2\1\16\1\u01d1\2\16\1\u0166\1\u0165\3\u0166\1\u01d4"+
    "\11\16\1\u0164\4\16\6\u01d3\10\16\1\u01cf\1\u0169\1\16"+
    "\1\267\1\u01cf\1\u010a\6\u01d5\10\16\1\u01cf\1\u0110\1\16"+
    "\1\267\1\u01cf\1\u010a\6\u01d5\13\16\1\147\1\16\1\276"+
    "\21\16\1\267\1\16\1\300\17\16\1\u0117\1\16\1\u016e"+
    "\2\16\1\u01d6\1\u01d7\1\u01d8\1\u01d9\2\u01d7\11\16\1\u01da"+
    "\1\16\1\u016e\2\16\6\u0170\11\16\1\u016f\1\16\1\u016e"+
    "\2\16\1\u0118\1\u0170\4\u0118\11\16\1\u011c\1\16\1\147"+
    "\1\16\1\276\6\u01db\5\16\2\2\2\u01dc\1\u011f\2\2"+
    "\1\u01dd\1\2\7\u01dc\1\306\1\311\1\u01dd\1\312\2\2"+
    "\2\u01dd\1\u0126\2\2\1\u01dd\1\2\7\u01dd\1\310\1\314"+
    "\1\u01dd\1\315\2\2\2\306\1\u011f\2\2\1\310\1\2"+
    "\10\306\1\311\1\310\1\312\2\2\2\u01b0\1\u01de\2\2"+
    "\1\u01b1\1\2\10\u01b0\1\u01b2\1\u01b1\1\u01b3\2\2\2\312"+
    "\1\u0129\2\2\1\315\1\2\10\312\1\u01ba\1\315\1\312"+
    "\2\2\2\306\1\163\2\2\1\310\1\2\10\306\1\u0120"+
    "\1\310\1\312\2\2\2\310\1\171\2\2\1\310\1\2"+
    "\10\310\1\u0127\1\310\1\315\2\2\2\312\1\173\2\2"+
    "\1\315\1\2\10\312\1\u012a\1\315\1\312\2\2\2\u017d"+
    "\1\307\2\2\1\u0180\1\2\10\u017d\1\u01df\1\u0180\1\u017f"+
    "\2\2\2\u0180\1\313\2\2\1\u0180\1\2\10\u0180\1\u01e0"+
    "\1\u0180\1\u0182\2\2\2\u017d\1\307\2\2\1\u0180\1\2"+
    "\10\u017d\1\u01e1\1\u0180\1\u017f\2\2\2\333\1\u0128\2\2"+
    "\1\334\1\2\11\333\1\334\1\336\2\2\2\u017f\1\u0188"+
    "\2\2\1\u0182\1\2\10\u017f\1\u01e2\1\u0182\1\u017f\2\2"+
    "\2\u0180\1\313\2\2\1\u0180\1\2\10\u0180\1\u01e3\1\u0180"+
    "\1\u0182\2\2\2\334\1\u012e\2\2\1\334\1\2\12\334"+
    "\1\343\2\2\2\u0182\1\u019a\2\2\1\u0182\1\2\10\u0182"+
    "\1\u01e4\2\u0182\2\2\2\u0183\1\u0184\2\2\1\u0185\1\2"+
    "\10\u0183\1\u01e5\1\u0185\1\u0187\2\2\2\u01e6\3\2\1\u01e7"+
    "\1\2\7\u01e6\2\u0124\1\u01e7\1\u01e8\2\2\2\u0185\1\u0197"+
    "\2\2\1\u0185\1\2\10\u0185\1\u01e9\1\u0185\1\u0199\2\2"+
    "\2\335\1\u01ea\2\2\1\342\1\2\11\335\1\342\1\367"+
    "\2\2\2\u0187\1\u01eb\2\2\1\u0199\1\2\10\u0187\1\u01ec"+
    "\1\u0199\1\u0187\2\2\2\u01ed\3\2\1\u01ee\1\2\7\u01ed"+
    "\1\u0125\1\u01e8\1\u01ee\1\u0125\2\2\2\336\1\u0196\2\2"+
    "\1\343\1\2\11\336\1\343\1\336\2\2\2\310\1\u0126"+
    "\2\2\1\310\1\2\10\310\1\314\1\310\1\315\2\2"+
    "\2\u01b1\1\u01ef\2\2\1\u01b1\1\2\10\u01b1\1\u01b4\1\u01b1"+
    "\1\u01b5\2\2\2\315\1\u012f\2\2\1\315\1\2\10\315"+
    "\1\u01bb\2\315\2\2\2\315\1\202\2\2\1\315\1\2"+
    "\10\315\1\u0130\2\315\2\2\2\u01f0\1\u0128\2\2\1\u01f1"+
    "\1\2\7\u01f0\1\u01f2\1\u017e\1\u01f1\1\u01f3\2\2\2\u01f1"+
    "\1\u012e\2\2\1\u01f1\1\2\7\u01f1\1\u01f4\1\u0181\1\u01f1"+
    "\1\u01f5\2\2\2\u01f2\1\u0128\2\2\1\u01f4\1\2\10\u01f2"+
    "\1\u017e\1\u01f4\1\u01f3\2\2\2\u01f6\1\u01ea\2\2\1\u01f7"+
    "\1\2\10\u01f6\1\u0186\1\u01f7\1\u01f8\2\2\2\u01f3\1\u0196"+
    "\2\2\1\u01f5\1\2\10\u01f3\1\u0189\1\u01f5\1\u01f3\2\2"+
    "\2\u01f9\1\u0129\2\2\1\u01fa\1\2\7\u01f9\1\312\1\u01ba"+
    "\1\u01fa\1\312\2\2\2\u01fa\1\u012f\2\2\1\u01fa\1\2"+
    "\7\u01fa\1\315\1\u01bb\1\u01fa\1\315\2\2\2\u01b3\1\u01fb"+
    "\2\2\1\u01b5\1\2\10\u01b3\1\u01fc\1\u01b5\1\u01b3\2\2"+
    "\2\u01fd\3\2\1\u01fe\1\2\7\u01fd\1\u0192\1\u01ff\1\u01fe"+
    "\1\u0192\2\2\2\u01e7\3\2\1\u01e7\1\2\7\u01e7\2\u012c"+
    "\1\u01e7\1\u0200\2\2\2\342\1\u0201\2\2\1\342\1\2"+
    "\12\342\1\u013a\2\2\2\u0199\1\u0202\2\2\1\u0199\1\2"+
    "\10\u0199\1\u0203\2\u0199\2\2\2\u01ee\3\2\1\u01ee\1\2"+
    "\7\u01ee\1\u012d\1\u0200\1\u01ee\1\u012d\2\2\2\343\1\u01a0"+
    "\2\2\1\343\1\2\13\343\2\2\2\u01f4\1\u012e\2\2"+
    "\1\u01f4\1\2\10\u01f4\1\u0181\1\u01f4\1\u01f5\2\2\2\u01f7"+
    "\1\u0201\2\2\1\u01f7\1\2\10\u01f7\1\u0198\1\u01f7\1\u0204"+
    "\2\2\2\u01f5\1\u01a0\2\2\1\u01f5\1\2\10\u01f5\1\u019b"+
    "\2\u01f5\2\2\2\u01b5\1\u0205\2\2\1\u01b5\1\2\10\u01b5"+
    "\1\u0206\2\u01b5\2\2\2\u01fe\3\2\1\u01fe\1\2\7\u01fe"+
    "\1\u019e\1\u0207\1\u01fe\1\u019e\2\2\2\320\1\172\2\2"+
    "\1\323\1\2\10\320\1\u0133\1\323\1\322\2\2\2\323"+
    "\1\201\2\2\1\323\1\2\10\323\1\u0135\1\323\1\325"+
    "\2\2\2\322\1\247\2\2\1\325\1\2\10\322\1\u0134"+
    "\1\325\1\322\2\2\2\325\1\344\2\2\1\325\1\2"+
    "\10\325\1\u0136\2\325\2\2\2\326\1\235\2\2\1\327"+
    "\1\2\10\326\1\u0137\1\327\1\331\2\2\2\327\1\360"+
    "\2\2\1\327\1\2\10\327\1\u0138\1\327\1\340\2\2"+
    "\2\331\1\370\2\2\1\340\1\2\10\331\1\u0139\1\340"+
    "\1\331\2\2\2\340\1\u0145\2\2\1\340\1\2\10\340"+
    "\1\u013b\2\340\2\2\2\23\1\u0208\2\2\1\25\1\2"+
    "\6\u0209\1\23\1\26\1\27\1\25\1\30\2\2\2\23"+
    "\1\u0208\2\2\1\25\1\2\6\u020a\1\23\1\26\1\27"+
    "\1\25\1\30\2\2\2\23\1\u0208\2\2\1\25\1\2"+
    "\6\u020b\1\23\1\26\1\27\1\25\1\30\2\2\2\23"+
    "\1\u0208\2\2\1\25\1\2\1\u020b\1\u020a\3\u020b\1\u020c"+
    "\1\23\1\26\1\27\1\25\1\30\2\2\2\4\1\72"+
    "\2\2\1\6\1\2\6\u020d\1\4\1\13\1\14\1\6"+
    "\1\15\2\2\2\26\1\u01ad\2\2\1\33\1\2\6\u01ae"+
    "\2\26\1\63\1\33\1\30\2\2\2\26\1\u013d\2\2"+
    "\1\33\1\2\6\u01ae\2\26\1\63\1\33\1\30\2\2"+
    "\2\u01b0\1\u01de\2\2\1\u01b1\1\2\10\u01b0\1\u020e\1\u01b1"+
    "\1\u01b3\2\2\2\u01b1\1\u01ef\2\2\1\u01b1\1\2\10\u01b1"+
    "\1\u020f\1\u01b1\1\u01b5\2\2\2\122\1\u01ea\2\2\1\124"+
    "\1\2\10\122\1\125\1\124\1\126\2\2\2\u01b3\1\u01fb"+
    "\2\2\1\u01b5\1\2\10\u01b3\1\u0210\1\u01b5\1\u01b3\2\2"+
    "\2\124\1\u0201\2\2\1\124\1\2\10\124\1\223\1\124"+
    "\1\234\2\2\2\u01b5\1\u0205\2\2\1\u01b5\1\2\10\u01b5"+
    "\1\u0211\2\u01b5\2\2\2\u01b3\1\u01eb\2\2\1\u01b5\1\2"+
    "\10\u01b3\1\u01fc\1\u01b5\1\u01b3\2\2\2\u01b5\1\u0202\2\2"+
    "\1\u01b5\1\2\10\u01b5\1\u0206\2\u01b5\2\2\2\u01a7\1\242"+
    "\2\2\1\u01a8\1\2\10\u01a7\1\u01ff\1\u01a8\1\u01a7\2\2"+
    "\2\u01a8\1\362\2\2\1\u01a8\1\2\10\u01a8\1\u0207\2\u01a8"+
    "\2\2\2\70\1\u0196\2\2\1\101\1\2\10\70\1\134"+
    "\1\101\1\70\2\2\2\101\1\u01a0\2\2\1\101\1\2"+
    "\10\101\1\203\2\101\3\16\1\u0212\3\16\1\u0213\1\u0154"+
    "\6\u0212\10\16\1\u0213\3\16\1\u0213\1\u0155\6\u0213\10\16"+
    "\1\u0214\3\16\1\u0215\1\u0216\6\u0214\10\16\1\u0215\3\16"+
    "\1\u0215\1\u0217\6\u0215\10\16\1\u0218\1\146\1\16\1\147"+
    "\1\u0219\1\16\1\u021a\1\u021b\1\u021c\1\u021d\2\u021b\10\16"+
    "\1\u0219\1\266\1\16\1\267\1\u0219\1\16\1\u021e\1\u021f"+
    "\1\u0220\1\u0221\2\u021f\10\16\1\u0222\2\16\1\147\1\u0223"+
    "\1\u01c4\6\u0222\10\16\1\u0223\2\16\1\267\1\u0223\1\u01c5"+
    "\6\u0223\10\16\1\u0218\1\146\2\16\1\u0219\1\16\1\u021a"+
    "\1\u021b\1\u021c\1\u021d\2\u021b\10\16\1\u0219\1\266\2\16"+
    "\1\u0219\1\16\1\u021e\1\u021f\1\u0220\1\u0221\2\u021f\10\16"+
    "\1\u0222\1\u011c\1\16\1\147\1\u0223\1\u01c4\6\u0224\10\16"+
    "\1\u0222\1\301\1\16\1\147\1\u0223\1\u01c4\6\u0224\10\16"+
    "\1\u0222\1\301\1\16\1\147\1\u0223\1\u01c4\6\u0225\10\16"+
    "\1\u0222\1\301\1\16\1\147\1\u0223\1\u01c4\1\u0225\1\u0224"+
    "\4\u0225\10\16\1\u0223\1\u0169\1\16\1\267\1\u0223\1\u01c5"+
    "\6\u0226\10\16\1\u0223\1\u0110\1\16\1\267\1\u0223\1\u01c5"+
    "\6\u0226\10\16\1\u0223\1\u0110\1\16\1\267\1\u0223\1\u01c5"+
    "\6\u0227\10\16\1\u0223\1\u0110\1\16\1\267\1\u0223\1\u01c5"+
    "\1\u0227\1\u0226\4\u0227\13\16\1\147\1\16\1\u0109\21\16"+
    "\1\267\1\16\1\u010a\17\16\1\u011c\1\16\1\147\1\16"+
    "\1\u0109\6\u01db\11\16\1\u0164\1\16\1\u01d1\2\16\1\u0228"+
    "\1\u0229\1\u022a\1\u022b\2\u0229\11\16\1\u022c\1\16\1\u01d1"+
    "\2\16\6\u01d3\11\16\1\u01d2\1\16\1\u01d1\2\16\1\u0165"+
    "\1\u01d3\4\u0165\11\16\1\u0169\1\16\1\267\1\16\1\u010a"+
    "\6\u022d\11\16\1\u022e\1\16\1\u016e\2\16\6\u022f\11\16"+
    "\1\u022e\1\16\1\u016e\2\16\6\u01d6\11\16\1\u022e\1\16"+
    "\1\u016e\2\16\6\u01d7\11\16\1\u022e\1\16\1\u016e\2\16"+
    "\1\u01d7\1\u01d6\3\u01d7\1\u0230\11\16\1\u0117\1\16\1\u016e"+
    "\2\16\6\u022f\11\16\1\u011c\4\16\6\u01db\5\16\2\2"+
    "\2\306\1\u011f\2\2\1\310\1\2\10\306\1\u0231\1\310"+
    "\1\312\2\2\2\310\1\u0126\2\2\1\310\1\2\10\310"+
    "\1\u0232\1\310\1\315\2\2\2\u0233\3\2\1\u0234\1\2"+
    "\7\u0233\2\u0176\1\u0234\1\u0195\2\2\2\u0235\1\u0128\2\2"+
    "\1\u0236\1\2\10\u0235\1\u0123\1\u0236\1\u0237\2\2\2\u0236"+
    "\1\u012e\2\2\1\u0236\1\2\10\u0236\1\u012b\1\u0236\1\u0238"+
    "\2\2\2\u0235\1\u0128\2\2\1\u0236\1\2\10\u0235\1\333"+
    "\1\u0236\1\u0237\2\2\2\u0237\1\u0196\2\2\1\u0238\1\2"+
    "\10\u0237\1\336\1\u0238\1\u0237\2\2\2\u0236\1\u012e\2\2"+
    "\1\u0236\1\2\10\u0236\1\334\1\u0236\1\u0238\2\2\2\u0238"+
    "\1\u01a0\2\2\1\u0238\1\2\10\u0238\1\343\2\u0238\2\2"+
    "\2\u0239\1\u01ea\2\2\1\u023a\1\2\10\u0239\1\335\1\u023a"+
    "\1\u023b\2\2\2\u023c\1\u0184\2\2\1\u023d\1\2\7\u023c"+
    "\1\u0183\1\u0186\1\u023d\1\u0187\2\2\2\u023d\1\u0197\2\2"+
    "\1\u023d\1\2\7\u023d\1\u0185\1\u0198\1\u023d\1\u0199\2\2"+
    "\2\u0187\1\u01eb\2\2\1\u0199\1\2\10\u0187\1\u023e\1\u0199"+
    "\1\u0187\2\2\2\u023a\1\u0201\2\2\1\u023a\1\2\10\u023a"+
    "\1\342\1\u023a\1\u023f\2\2\2\u0240\3\2\1\u0241\1\2"+
    "\7\u0240\2\u0191\1\u0241\1\u01ff\2\2\2\u0242\3\2\1\u0243"+
    "\1\2\7\u0242\2\u01e8\1\u0243\1\u01e8\2\2\2\u023b\1\u0244"+
    "\2\2\1\u023f\1\2\10\u023b\1\367\1\u023f\1\u023b\2\2"+
    "\2\u0245\1\u0188\2\2\1\u0246\1\2\7\u0245\1\u017f\1\u0189"+
    "\1\u0246\1\u017f\2\2\2\u0246\1\u019a\2\2\1\u0246\1\2"+
    "\7\u0246\1\u0182\1\u019b\1\u0246\1\u0182\2\2\2\u0234\3\2"+
    "\1\u0234\1\2\7\u0234\2\u018b\1\u0234\1\u019f\2\2\2\u01f2"+
    "\1\u0128\2\2\1\u01f4\1\2\10\u01f2\1\u0247\1\u01f4\1\u01f3"+
    "\2\2\2\u01f4\1\u012e\2\2\1\u01f4\1\2\10\u01f4\1\u0248"+
    "\1\u01f4\1\u01f5\2\2\2\u01f2\1\u0128\2\2\1\u01f4\1\2"+
    "\10\u01f2\1\u0249\1\u01f4\1\u01f3\2\2\2\u01f3\1\u0196\2\2"+
    "\1\u01f5\1\2\10\u01f3\1\u024a\1\u01f5\1\u01f3\2\2\2\u01f4"+
    "\1\u012e\2\2\1\u01f4\1\2\10\u01f4\1\u024b\1\u01f4\1\u01f5"+
    "\2\2\2\u01f5\1\u01a0\2\2\1\u01f5\1\2\10\u01f5\1\u024c"+
    "\2\u01f5\2\2\2\u01f6\1\u01ea\2\2\1\u01f7\1\2\10\u01f6"+
    "\1\u024d\1\u01f7\1\u01f8\2\2\2\u01f7\1\u0201\2\2\1\u01f7"+
    "\1\2\10\u01f7\1\u024e\1\u01f7\1\u0204\2\2\2\u01f8\1\u0244"+
    "\2\2\1\u0204\1\2\10\u01f8\1\u024f\1\u0204\1\u01f8\2\2"+
    "\2\312\1\u0129\2\2\1\315\1\2\10\312\1\u0250\1\315"+
    "\1\312\2\2\2\315\1\u012f\2\2\1\315\1\2\10\315"+
    "\1\u0251\2\315\2\2\2\u0252\3\2\1\u0253\1\2\7\u0252"+
    "\2\u0195\1\u0253\1\u0195\2\2\2\126\1\u0244\2\2\1\234"+
    "\1\2\10\126\1\237\1\234\1\126\2\2\2\u0254\1\u0196"+
    "\2\2\1\u0255\1\2\7\u0254\1\u01f3\1\u0189\1\u0255\1\u01f3"+
    "\2\2\2\u0255\1\u01a0\2\2\1\u0255\1\2\7\u0255\1\u01f5"+
    "\1\u019b\1\u0255\1\u01f5\2\2\2\u01f8\1\u0244\2\2\1\u0204"+
    "\1\2\10\u01f8\1\u023e\1\u0204\1\u01f8\2\2\2\u0199\1\u0202"+
    "\2\2\1\u0199\1\2\10\u0199\1\u0256\2\u0199\2\2\2\u0241"+
    "\3\2\1\u0241\1\2\7\u0241\2\u019d\1\u0241\1\u0207\2\2"+
    "\2\u0243\3\2\1\u0243\1\2\7\u0243\2\u0200\1\u0243\1\u0200"+
    "\2\2\2\u023f\1\u0257\2\2\1\u023f\1\2\10\u023f\1\u013a"+
    "\2\u023f\2\2\2\u0204\1\u0257\2\2\1\u0204\1\2\10\u0204"+
    "\1\u0258\2\u0204\2\2\2\u0253\3\2\1\u0253\1\2\7\u0253"+
    "\2\u019f\1\u0253\1\u019f\2\2\2\234\1\u0257\2\2\1\234"+
    "\1\2\10\234\1\363\2\234\2\2\2\u0204\1\u0257\2\2"+
    "\1\u0204\1\2\10\u0204\1\u0256\2\u0204\2\2\2\4\1\72"+
    "\2\2\1\6\1\2\6\u0259\1\4\1\13\1\14\1\6"+
    "\1\15\2\2\2\26\1\u0208\2\2\1\33\1\2\6\u025a"+
    "\2\26\1\61\1\33\1\30\2\2\2\26\1\u0208\2\2"+
    "\1\33\1\2\6\u025b\2\26\1\61\1\33\1\30\2\2"+
    "\2\26\1\u0208\2\2\1\33\1\2\1\u025b\1\u025a\4\u025b"+
    "\2\26\1\61\1\33\1\30\2\2\2\u025c\1\u01ea\2\2"+
    "\1\u025d\1\2\10\u025c\1\125\1\u025d\1\u025e\2\2\2\u025d"+
    "\1\u0201\2\2\1\u025d\1\2\10\u025d\1\223\1\u025d\1\u025f"+
    "\2\2\2\u025e\1\u0244\2\2\1\u025f\1\2\10\u025e\1\237"+
    "\1\u025f\1\u025e\2\2\2\u025f\1\u0257\2\2\1\u025f\1\2"+
    "\10\u025f\1\363\2\u025f\10\16\1\u0154\23\16\1\u0155\16\16"+
    "\1\u0260\3\16\1\u0261\1\u0216\6\u0260\10\16\1\u0261\3\16"+
    "\1\u0261\1\u0217\6\u0261\10\16\1\u0262\3\16\1\u0263\1\u0264"+
    "\6\u0262\10\16\1\u0263\3\16\1\u0263\1\u0265\6\u0263\10\16"+
    "\1\u0266\2\16\1\147\1\u0267\1\u0268\6\u0266\10\16\1\u0267"+
    "\2\16\1\267\1\u0267\1\u0269\6\u0267\10\16\1\u0266\1\301"+
    "\1\16\1\147\1\u0267\1\u0268\6\u026a\10\16\1\u0266\1\301"+
    "\1\16\1\147\1\u0267\1\u0268\6\u026b\10\16\1\u0266\1\301"+
    "\1\16\1\147\1\u0267\1\u0268\6\u026c\10\16\1\u0266\1\301"+
    "\1\16\1\147\1\u0267\1\u0268\1\u026c\1\u026b\3\u026c\1\u026d"+
    "\10\16\1\u0267\1\u0110\1\16\1\267\1\u0267\1\u0269\6\u026e"+
    "\10\16\1\u0267\1\u0110\1\16\1\267\1\u0267\1\u0269\6\u026f"+
    "\10\16\1\u0267\1\u0110\1\16\1\267\1\u0267\1\u0269\6\u0270"+
    "\10\16\1\u0267\1\u0110\1\16\1\267\1\u0267\1\u0269\1\u0270"+
    "\1\u026f\3\u0270\1\u0271\10\16\1\u0272\2\16\1\147\1\u0273"+
    "\1\u01c4\6\u0272\10\16\1\u0273\2\16\1\267\1\u0273\1\u01c5"+
    "\6\u0273\10\16\1\u0272\1\u011c\1\16\1\147\1\u0273\1\u01c4"+
    "\6\u0274\10\16\1\u0272\1\301\1\16\1\147\1\u0273\1\u01c4"+
    "\6\u0274\10\16\1\u0273\1\u0169\1\16\1\267\1\u0273\1\u01c5"+
    "\6\u0275\10\16\1\u0273\1\u0110\1\16\1\267\1\u0273\1\u01c5"+
    "\6\u0275\11\16\1\u0276\1\16\1\u01d1\2\16\6\u0277\11\16"+
    "\1\u0276\1\16\1\u01d1\2\16\6\u0228\11\16\1\u0276\1\16"+
    "\1\u01d1\2\16\6\u0229\11\16\1\u0276\1\16\1\u01d1\2\16"+
    "\1\u0229\1\u0228\3\u0229\1\u0278\11\16\1\u0164\1\16\1\u01d1"+
    "\2\16\6\u0277\11\16\1\u0169\4\16\6\u022d\11\16\1\u0117"+
    "\1\16\1\u016e\2\16\1\u0279\1\u027a\1\u027b\1\u027c\2\u027a"+
    "\11\16\1\u027d\1\16\1\u016e\2\16\6\u022f\11\16\1\u022e"+
    "\1\16\1\u016e\2\16\1\u01d6\1\u022f\4\u01d6\5\16\2\2"+
    "\2\u0178\1\u0128\2\2\1\u0179\1\2\10\u0178\1\157\1\u0179"+
    "\1\u017a\2\2\2\u0179\1\u012e\2\2\1\u0179\1\2\10\u0179"+
    "\1\161\1\u0179\1\u018d\2\2\2\u027e\1\u01de\2\2\1\u027f"+
    "\1\2\7\u027e\1\u01b0\1\u01b2\1\u027f\1\u01b3\2\2\2\u027f"+
    "\1\u01ef\2\2\1\u027f\1\2\7\u027f\1\u01b1\1\u01b4\1\u027f"+
    "\1\u01b5\2\2\2\u017d\1\172\2\2\1\u0180\1\2\10\u017d"+
    "\1\u01e1\1\u0180\1\u017f\2\2\2\u0180\1\201\2\2\1\u0180"+
    "\1\2\10\u0180\1\u01e3\1\u0180\1\u0182\2\2\2\u017f\1\247"+
    "\2\2\1\u0182\1\2\10\u017f\1\u01e2\1\u0182\1\u017f\2\2"+
    "\2\u0182\1\344\2\2\1\u0182\1\2\10\u0182\1\u01e4\2\u0182"+
    "\2\2\2\u0183\1\235\2\2\1\u0185\1\2\10\u0183\1\u01e5"+
    "\1\u0185\1\u0187\2\2\2\u0185\1\360\2\2\1\u0185\1\2"+
    "\10\u0185\1\u01e9\1\u0185\1\u0199\2\2\2\u0187\1\370\2\2"+
    "\1\u0199\1\2\10\u0187\1\u01ec\1\u0199\1\u0187\2\2\2\u0183"+
    "\1\u0184\2\2\1\u0185\1\2\10\u0183\1\u0280\1\u0185\1\u0187"+
    "\2\2\2\u0185\1\u0197\2\2\1\u0185\1\2\10\u0185\1\u0281"+
    "\1\u0185\1\u0199\2\2\2\367\1\u0244\2\2\1\u013a\1\2"+
    "\11\367\1\u013a\1\367\2\2\2\u0199\1\u0145\2\2\1\u0199"+
    "\1\2\10\u0199\1\u0203\2\u0199\2\2\2\u0282\1\u01ea\2\2"+
    "\1\u0283\1\2\7\u0282\1\u01f6\1\u0186\1\u0283\1\u01f8\2\2"+
    "\2\u0283\1\u0201\2\2\1\u0283\1\2\7\u0283\1\u01f7\1\u0198"+
    "\1\u0283\1\u0204\2\2\2\u0284\1\u01eb\2\2\1\u0285\1\2"+
    "\7\u0284\1\u0187\1\u023e\1\u0285\1\u0187\2\2\2\u0285\1\u0202"+
    "\2\2\1\u0285\1\2\7\u0285\1\u0199\1\u0256\1\u0285\1\u0199"+
    "\2\2\2\u0286\3\2\1\u0287\1\2\7\u0286\2\u01ff\1\u0287"+
    "\1\u01ff\2\2\2\u017f\1\u0188\2\2\1\u0182\1\2\10\u017f"+
    "\1\u0288\1\u0182\1\u017f\2\2\2\u0182\1\u019a\2\2\1\u0182"+
    "\1\2\10\u0182\1\u0289\2\u0182\2\2\2\u028a\1\u0128\2\2"+
    "\1\u028b\1\2\10\u028a\1\u0190\1\u028b\1\u028c\2\2\2\u028b"+
    "\1\u012e\2\2\1\u028b\1\2\10\u028b\1\u019c\1\u028b\1\u028d"+
    "\2\2\2\u028a\1\u0128\2\2\1\u028b\1\2\10\u028a\1\333"+
    "\1\u028b\1\u028c\2\2\2\u028c\1\u0196\2\2\1\u028d\1\2"+
    "\10\u028c\1\336\1\u028d\1\u028c\2\2\2\u028b\1\u012e\2\2"+
    "\1\u028b\1\2\10\u028b\1\334\1\u028b\1\u028d\2\2\2\u028d"+
    "\1\u01a0\2\2\1\u028d\1\2\10\u028d\1\343\2\u028d\2\2"+
    "\2\u028e\1\u01ea\2\2\1\u028f\1\2\10\u028e\1\335\1\u028f"+
    "\1\u0290\2\2\2\u028f\1\u0201\2\2\1\u028f\1\2\10\u028f"+
    "\1\342\1\u028f\1\u0291\2\2\2\u0290\1\u0244\2\2\1\u0291"+
    "\1\2\10\u0290\1\367\1\u0291\1\u0290\2\2\2\u017a\1\u0196"+
    "\2\2\1\u018d\1\2\10\u017a\1\u014c\1\u018d\1\u017a\2\2"+
    "\2\u018d\1\u01a0\2\2\1\u018d\1\2\10\u018d\1\u014d\2\u018d"+
    "\2\2\2\u0292\1\u01fb\2\2\1\u0293\1\2\7\u0292\1\u01b3"+
    "\1\u01fc\1\u0293\1\u01b3\2\2\2\u0293\1\u0205\2\2\1\u0293"+
    "\1\2\7\u0293\1\u01b5\1\u0206\1\u0293\1\u01b5\2\2\2\u01f3"+
    "\1\u0196\2\2\1\u01f5\1\2\10\u01f3\1\u0294\1\u01f5\1\u01f3"+
    "\2\2\2\u01f5\1\u01a0\2\2\1\u01f5\1\2\10\u01f5\1\u0295"+
    "\2\u01f5\2\2\2\u013a\1\u0257\2\2\1\u013a\1\2\13\u013a"+
    "\2\2\2\u0287\3\2\1\u0287\1\2\7\u0287\2\u0207\1\u0287"+
    "\1\u0207\2\2\2\u0291\1\u0257\2\2\1\u0291\1\2\10\u0291"+
    "\1\u013a\2\u0291\2\2\2\23\1\u0208\2\2\1\25\1\2"+
    "\6\u0296\1\23\1\26\1\27\1\25\1\30\2\2\2\26"+
    "\1\u0208\2\2\1\33\1\2\6\u025a\2\26\1\63\1\33"+
    "\1\30\2\2\2\u01b0\1\227\2\2\1\u01b1\1\2\10\u01b0"+
    "\1\u020e\1\u01b1\1\u01b3\2\2\2\u01b1\1\233\2\2\1\u01b1"+
    "\1\2\10\u01b1\1\u020f\1\u01b1\1\u01b5\2\2\2\u01b3\1\236"+
    "\2\2\1\u01b5\1\2\10\u01b3\1\u0210\1\u01b5\1\u01b3\2\2"+
    "\2\u01b5\1\361\2\2\1\u01b5\1\2\10\u01b5\1\u0211\2\u01b5"+
    "\3\16\1\u0297\3\16\1\u0298\1\u0216\6\u0297\10\16\1\u0298"+
    "\3\16\1\u0298\1\u0217\6\u0298\10\16\1\u0299\3\16\1\u029a"+
    "\1\u029b\6\u0299\10\16\1\u029a\3\16\1\u029a\1\u029c\6\u029a"+
    "\10\16\1\u029d\1\146\1\16\1\147\1\u029e\1\16\1\u029f"+
    "\1\u02a0\1\u02a1\1\u02a2\2\u02a0\10\16\1\u029e\1\266\1\16"+
    "\1\267\1\u029e\1\16\1\u02a3\1\u02a4\1\u02a5\1\u02a6\2\u02a4"+
    "\10\16\1\u02a7\2\16\1\147\1\u02a8\1\u0268\6\u02a7\10\16"+
    "\1\u02a8\2\16\1\267\1\u02a8\1\u0269\6\u02a8\10\16\1\u029d"+
    "\1\146\2\16\1\u029e\1\16\1\u029f\1\u02a0\1\u02a1\1\u02a2"+
    "\2\u02a0\10\16\1\u029e\1\266\2\16\1\u029e\1\16\1\u02a3"+
    "\1\u02a4\1\u02a5\1\u02a6\2\u02a4\10\16\1\u02a7\1\u011c\1\16"+
    "\1\147\1\u02a8\1\u0268\6\u02a9\10\16\1\u02a7\1\301\1\16"+
    "\1\147\1\u02a8\1\u0268\6\u02a9\10\16\1\u02a7\1\301\1\16"+
    "\1\147\1\u02a8\1\u0268\6\u02aa\10\16\1\u02a7\1\301\1\16"+
    "\1\147\1\u02a8\1\u0268\1\u02aa\1\u02a9\4\u02aa\10\16\1\u02a8"+
    "\1\u0169\1\16\1\267\1\u02a8\1\u0269\6\u02ab\10\16\1\u02a8"+
    "\1\u0110\1\16\1\267\1\u02a8\1\u0269\6\u02ab\10\16\1\u02a8"+
    "\1\u0110\1\16\1\267\1\u02a8\1\u0269\6\u02ac\10\16\1\u02a8"+
    "\1\u0110\1\16\1\267\1\u02a8\1\u0269\1\u02ac\1\u02ab\4\u02ac"+
    "\13\16\1\147\1\16\1\u01c4\21\16\1\267\1\16\1\u01c5"+
    "\17\16\1\u011c\1\16\1\147\1\16\1\u01c4\6\u01db\11\16"+
    "\1\u0169\1\16\1\267\1\16\1\u01c5\6\u022d\11\16\1\u0164"+
    "\1\16\1\u01d1\2\16\1\u02ad\1\u02ae\1\u02af\1\u02b0\2\u02ae"+
    "\11\16\1\u02b1\1\16\1\u01d1\2\16\6\u0277\11\16\1\u0276"+
    "\1\16\1\u01d1\2\16\1\u0228\1\u0277\4\u0228\11\16\1\u0117"+
    "\1\16\1\147\2\16\6\u02b2\11\16\1\u0117\1\16\1\147"+
    "\2\16\6\u0279\11\16\1\u0117\1\16\1\147\2\16\6\u027a"+
    "\11\16\1\u0117\1\16\1\147\2\16\1\u027a\1\u0279\3\u027a"+
    "\1\u02b3\11\16\1\u0117\1\16\1\u016e\2\16\6\u02b2\5\16"+
    "\2\2\2\u01b0\1\u01de\2\2\1\u01b1\1\2\10\u01b0\1\u02b4"+
    "\1\u01b1\1\u01b3\2\2\2\u01b1\1\u01ef\2\2\1\u01b1\1\2"+
    "\10\u01b1\1\u02b5\1\u01b1\1\u01b5\2\2\2\u0239\1\u01ea\2\2"+
    "\1\u023a\1\2\10\u0239\1\u0124\1\u023a\1\u023b\2\2\2\u023a"+
    "\1\u0201\2\2\1\u023a\1\2\10\u023a\1\u012c\1\u023a\1\u023f"+
    "\2\2\2\u01f6\1\u01ea\2\2\1\u01f7\1\2\10\u01f6\1\u02b6"+
    "\1\u01f7\1\u01f8\2\2\2\u01f7\1\u0201\2\2\1\u01f7\1\2"+
    "\10\u01f7\1\u02b7\1\u01f7\1\u0204\2\2\2\u0187\1\u01eb\2\2"+
    "\1\u0199\1\2\10\u0187\1\u02b8\1\u0199\1\u0187\2\2\2\u0199"+
    "\1\u0202\2\2\1\u0199\1\2\10\u0199\1\u02b9\2\u0199\2\2"+
    "\2\u02ba\1\u0244\2\2\1\u02bb\1\2\7\u02ba\1\u01f8\1\u023e"+
    "\1\u02bb\1\u01f8\2\2\2\u02bb\1\u0257\2\2\1\u02bb\1\2"+
    "\7\u02bb\1\u0204\1\u0256\1\u02bb\1\u0204\2\2\2\u0237\1\u0196"+
    "\2\2\1\u0238\1\2\10\u0237\1\u0125\1\u0238\1\u0237\2\2"+
    "\2\u0238\1\u01a0\2\2\1\u0238\1\2\10\u0238\1\u012d\2\u0238"+
    "\2\2\2\u01f2\1\172\2\2\1\u01f4\1\2\10\u01f2\1\u0249"+
    "\1\u01f4\1\u01f3\2\2\2\u01f4\1\201\2\2\1\u01f4\1\2"+
    "\10\u01f4\1\u024b\1\u01f4\1\u01f5\2\2\2\u01f3\1\247\2\2"+
    "\1\u01f5\1\2\10\u01f3\1\u024a\1\u01f5\1\u01f3\2\2\2\u01f5"+
    "\1\344\2\2\1\u01f5\1\2\10\u01f5\1\u024c\2\u01f5\2\2"+
    "\2\u01f6\1\235\2\2\1\u01f7\1\2\10\u01f6\1\u024d\1\u01f7"+
    "\1\u01f8\2\2\2\u01f7\1\360\2\2\1\u01f7\1\2\10\u01f7"+
    "\1\u024e\1\u01f7\1\u0204\2\2\2\u01f8\1\370\2\2\1\u0204"+
    "\1\2\10\u01f8\1\u024f\1\u0204\1\u01f8\2\2\2\u0204\1\u0145"+
    "\2\2\1\u0204\1\2\10\u0204\1\u0258\2\u0204\2\2\2\u01b3"+
    "\1\u01fb\2\2\1\u01b5\1\2\10\u01b3\1\u02bc\1\u01b5\1\u01b3"+
    "\2\2\2\u01b5\1\u0205\2\2\1\u01b5\1\2\10\u01b5\1\u02bd"+
    "\2\u01b5\2\2\2\u028c\1\u0196\2\2\1\u028d\1\2\10\u028c"+
    "\1\u0192\1\u028d\1\u028c\2\2\2\u028d\1\u01a0\2\2\1\u028d"+
    "\1\2\10\u028d\1\u019e\2\u028d\2\2\2\26\1\u0208\2\2"+
    "\1\33\1\2\6\u02be\2\26\1\61\1\33\1\30\10\16"+
    "\1\u0216\23\16\1\u0217\16\16\1\u02bf\3\16\1\u02c0\1\u029b"+
    "\6\u02bf\10\16\1\u02c0\3\16\1\u02c0\1\u029c\6\u02c0\10\16"+
    "\1\u02c1\3\16\1\u02c2\1\u02c3\6\u02c1\10\16\1\u02c2\3\16"+
    "\1\u02c2\1\u02c4\6\u02c2\10\16\1\u02c5\2\16\1\147\1\u02c6"+
    "\1\u02c7\6\u02c5\10\16\1\u02c6\2\16\1\267\1\u02c6\1\u02c8"+
    "\6\u02c6\10\16\1\u02c5\1\301\1\16\1\147\1\u02c6\1\u02c7"+
    "\6\u02c9\10\16\1\u02c5\1\301\1\16\1\147\1\u02c6\1\u02c7"+
    "\6\u02ca\10\16\1\u02c5\1\301\1\16\1\147\1\u02c6\1\u02c7"+
    "\6\u02cb\10\16\1\u02c5\1\301\1\16\1\147\1\u02c6\1\u02c7"+
    "\1\u02cb\1\u02ca\3\u02cb\1\u02cc\10\16\1\u02c6\1\u0110\1\16"+
    "\1\267\1\u02c6\1\u02c8\6\u02cd\10\16\1\u02c6\1\u0110\1\16"+
    "\1\267\1\u02c6\1\u02c8\6\u02ce\10\16\1\u02c6\1\u0110\1\16"+
    "\1\267\1\u02c6\1\u02c8\6\u02cf\10\16\1\u02c6\1\u0110\1\16"+
    "\1\267\1\u02c6\1\u02c8\1\u02cf\1\u02ce\3\u02cf\1\u02d0\10\16"+
    "\1\u02d1\2\16\1\147\1\u02d2\1\u0268\6\u02d1\10\16\1\u02d2"+
    "\2\16\1\267\1\u02d2\1\u0269\6\u02d2\10\16\1\u02d1\1\u011c"+
    "\1\16\1\147\1\u02d2\1\u0268\6\u02d3\10\16\1\u02d1\1\301"+
    "\1\16\1\147\1\u02d2\1\u0268\6\u02d3\10\16\1\u02d2\1\u0169"+
    "\1\16\1\267\1\u02d2\1\u0269\6\u02d4\10\16\1\u02d2\1\u0110"+
    "\1\16\1\267\1\u02d2\1\u0269\6\u02d4\11\16\1\u0164\1\16"+
    "\1\267\2\16\6\u02d5\11\16\1\u0164\1\16\1\267\2\16"+
    "\6\u02ad\11\16\1\u0164\1\16\1\267\2\16\6\u02ae\11\16"+
    "\1\u0164\1\16\1\267\2\16\1\u02ae\1\u02ad\3\u02ae\1\u02d6"+
    "\11\16\1\u0164\1\16\1\u01d1\2\16\6\u02d5\11\16\1\u0117"+
    "\1\16\1\u02d7\2\16\6\u02b2\11\16\1\u0117\1\16\1\147"+
    "\2\16\1\u0279\1\u02b2\4\u0279\5\16\2\2\2\u025c\1\u01ea"+
    "\2\2\1\u025d\1\2\10\u025c\1\u0143\1\u025d\1\u025e\2\2"+
    "\2\u025d\1\u0201\2\2\1\u025d\1\2\10\u025d\1\u0144\1\u025d"+
    "\1\u025f\2\2\2\u028e\1\u01ea\2\2\1\u028f\1\2\10\u028e"+
    "\1\u0191\1\u028f\1\u0290\2\2\2\u028f\1\u0201\2\2\1\u028f"+
    "\1\2\10\u028f\1\u019d\1\u028f\1\u0291\2\2\2\u023b\1\u0244"+
    "\2\2\1\u023f\1\2\10\u023b\1\u01e8\1\u023f\1\u023b\2\2"+
    "\2\u023f\1\u0257\2\2\1\u023f\1\2\10\u023f\1\u0200\2\u023f"+
    "\2\2\2\u01f8\1\u0244\2\2\1\u0204\1\2\10\u01f8\1\u02d8"+
    "\1\u0204\1\u01f8\2\2\2\u0204\1\u0257\2\2\1\u0204\1\2"+
    "\10\u0204\1\u02d9\2\u0204\2\2\2\u025e\1\u0244\2\2\1\u025f"+
    "\1\2\10\u025e\1\u01b6\1\u025f\1\u025e\2\2\2\u025f\1\u0257"+
    "\2\2\1\u025f\1\2\10\u025f\1\u01b7\2\u025f\2\2\2\26"+
    "\1\u0208\2\2\1\33\1\2\6\u02be\2\26\1\63\1\33"+
    "\1\30\3\16\1\u02da\3\16\1\u02db\1\u029b\6\u02da\10\16"+
    "\1\u02db\3\16\1\u02db\1\u029c\6\u02db\10\16\1\u02dc\3\16"+
    "\1\u02dd\1\u02de\6\u02dc\10\16\1\u02dd\3\16\1\u02dd\1\u02df"+
    "\6\u02dd\10\16\1\u02e0\1\146\1\16\1\147\1\u02e1\1\16"+
    "\1\u02e2\1\u02e3\1\u02e4\1\u02e5\2\u02e3\10\16\1\u02e1\1\266"+
    "\1\16\1\267\1\u02e1\1\16\1\u02e6\1\u02e7\1\u02e8\1\u02e9"+
    "\2\u02e7\10\16\1\u02ea\2\16\1\147\1\u02eb\1\u02c7\6\u02ea"+
    "\10\16\1\u02eb\2\16\1\267\1\u02eb\1\u02c8\6\u02eb\10\16"+
    "\1\u02e0\1\146\2\16\1\u02e1\1\16\1\u02e2\1\u02e3\1\u02e4"+
    "\1\u02e5\2\u02e3\10\16\1\u02e1\1\266\2\16\1\u02e1\1\16"+
    "\1\u02e6\1\u02e7\1\u02e8\1\u02e9\2\u02e7\10\16\1\u02ea\1\u011c"+
    "\1\16\1\147\1\u02eb\1\u02c7\6\u02ec\10\16\1\u02ea\1\301"+
    "\1\16\1\147\1\u02eb\1\u02c7\6\u02ec\10\16\1\u02ea\1\301"+
    "\1\16\1\147\1\u02eb\1\u02c7\6\u02ed\10\16\1\u02ea\1\301"+
    "\1\16\1\147\1\u02eb\1\u02c7\1\u02ed\1\u02ec\4\u02ed\10\16"+
    "\1\u02eb\1\u0169\1\16\1\267\1\u02eb\1\u02c8\6\u02ee\10\16"+
    "\1\u02eb\1\u0110\1\16\1\267\1\u02eb\1\u02c8\6\u02ee\10\16"+
    "\1\u02eb\1\u0110\1\16\1\267\1\u02eb\1\u02c8\6\u02ef\10\16"+
    "\1\u02eb\1\u0110\1\16\1\267\1\u02eb\1\u02c8\1\u02ef\1\u02ee"+
    "\4\u02ef\13\16\1\147\1\16\1\u0268\21\16\1\267\1\16"+
    "\1\u0269\17\16\1\u011c\1\16\1\147\1\16\1\u0268\6\u01db"+
    "\11\16\1\u0169\1\16\1\267\1\16\1\u0269\6\u022d\11\16"+
    "\1\u0164\1\16\1\u02f0\2\16\6\u02d5\11\16\1\u0164\1\16"+
    "\1\267\2\16\1\u02ad\1\u02d5\4\u02ad\5\16\2\2\2\u0290"+
    "\1\u0244\2\2\1\u0291\1\2\10\u0290\1\u01ff\1\u0291\1\u0290"+
    "\2\2\2\u0291\1\u0257\2\2\1\u0291\1\2\10\u0291\1\u0207"+
    "\2\u0291\10\16\1\u029b\23\16\1\u029c\16\16\1\u02f1\3\16"+
    "\1\u02f2\1\u02de\6\u02f1\10\16\1\u02f2\3\16\1\u02f2\1\u02df"+
    "\6\u02f2\10\16\1\u02f3\1\146\2\16\1\u02f4\1\u02f5\1\u02f6"+
    "\1\u02f7\1\u02f8\1\u02f9\2\u02f7\10\16\1\u02f4\1\266\2\16"+
    "\1\u02f4\1\u02fa\1\u02fb\1\u02fc\1\u02fd\1\u02fe\2\u02fc\10\16"+
    "\1\u02ff\2\16\1\147\1\u0300\1\u0301\6\u02ff\10\16\1\u0300"+
    "\2\16\1\267\1\u0300\1\u0302\6\u0300\10\16\1\u02ff\1\301"+
    "\1\16\1\147\1\u0300\1\u0301\6\u0303\10\16\1\u02ff\1\301"+
    "\1\16\1\147\1\u0300\1\u0301\6\u0304\10\16\1\u02ff\1\301"+
    "\1\16\1\147\1\u0300\1\u0301\6\u0305\10\16\1\u02ff\1\301"+
    "\1\16\1\147\1\u0300\1\u0301\1\u0305\1\u0304\3\u0305\1\u0306"+
    "\10\16\1\u0300\1\u0110\1\16\1\267\1\u0300\1\u0302\6\u0307"+
    "\10\16\1\u0300\1\u0110\1\16\1\267\1\u0300\1\u0302\6\u0308"+
    "\10\16\1\u0300\1\u0110\1\16\1\267\1\u0300\1\u0302\6\u0309"+
    "\10\16\1\u0300\1\u0110\1\16\1\267\1\u0300\1\u0302\1\u0309"+
    "\1\u0308\3\u0309\1\u030a\10\16\1\u030b\2\16\1\147\1\u030c"+
    "\1\u02c7\6\u030b\10\16\1\u030c\2\16\1\267\1\u030c\1\u02c8"+
    "\6\u030c\10\16\1\u030b\1\u011c\1\16\1\147\1\u030c\1\u02c7"+
    "\6\u030d\10\16\1\u030b\1\301\1\16\1\147\1\u030c\1\u02c7"+
    "\6\u030d\10\16\1\u030c\1\u0169\1\16\1\267\1\u030c\1\u02c8"+
    "\6\u030e\10\16\1\u030c\1\u0110\1\16\1\267\1\u030c\1\u02c8"+
    "\6\u030e\10\16\1\u030f\3\16\1\u0310\1\u02de\6\u030f\10\16"+
    "\1\u0310\3\16\1\u0310\1\u02df\6\u0310\10\16\1\u0311\3\16"+
    "\1\u0312\1\u0313\6\u0311\10\16\1\u0312\3\16\1\u0312\1\u0314"+
    "\6\u0312\10\16\1\u0315\2\16\1\147\1\u0316\1\16\6\u0315"+
    "\10\16\1\u0311\1\301\2\16\1\u0312\1\u0313\6\u0317\10\16"+
    "\1\u0311\1\301\2\16\1\u0312\1\u0313\6\u0318\10\16\1\u0311"+
    "\1\301\2\16\1\u0312\1\u0313\6\u0319\10\16\1\u0311\1\301"+
    "\2\16\1\u0312\1\u0313\1\u0319\1\u0318\3\u0319\1\u031a\10\16"+
    "\1\u0316\2\16\1\267\1\u0316\1\16\6\u0316\10\16\1\u0312"+
    "\1\u0110\2\16\1\u0312\1\u0314\6\u031b\10\16\1\u0312\1\u0110"+
    "\2\16\1\u0312\1\u0314\6\u031c\10\16\1\u0312\1\u0110\2\16"+
    "\1\u0312\1\u0314\6\u031d\10\16\1\u0312\1\u0110\2\16\1\u0312"+
    "\1\u0314\1\u031d\1\u031c\3\u031d\1\u031e\10\16\1\u031f\2\16"+
    "\1\147\1\u0320\1\u0301\6\u031f\10\16\1\u0320\2\16\1\267"+
    "\1\u0320\1\u0302\6\u0320\10\16\1\u0315\3\16\1\u0316\1\16"+
    "\6\u0315\10\16\1\u0316\3\16\1\u0316\1\16\6\u0316\10\16"+
    "\1\u031f\1\u011c\1\16\1\147\1\u0320\1\u0301\6\u0321\10\16"+
    "\1\u031f\1\301\1\16\1\147\1\u0320\1\u0301\6\u0321\10\16"+
    "\1\u031f\1\301\1\16\1\147\1\u0320\1\u0301\6\u0322\10\16"+
    "\1\u031f\1\301\1\16\1\147\1\u0320\1\u0301\1\u0322\1\u0321"+
    "\4\u0322\10\16\1\u0320\1\u0169\1\16\1\267\1\u0320\1\u0302"+
    "\6\u0323\10\16\1\u0320\1\u0110\1\16\1\267\1\u0320\1\u0302"+
    "\6\u0323\10\16\1\u0320\1\u0110\1\16\1\267\1\u0320\1\u0302"+
    "\6\u0324\10\16\1\u0320\1\u0110\1\16\1\267\1\u0320\1\u0302"+
    "\1\u0324\1\u0323\4\u0324\13\16\1\147\1\16\1\u02c7\21\16"+
    "\1\267\1\16\1\u02c8\17\16\1\u011c\1\16\1\147\1\16"+
    "\1\u02c7\6\u01db\11\16\1\u0169\1\16\1\267\1\16\1\u02c8"+
    "\6\u022d\15\16\1\u02de\23\16\1\u02df\16\16\1\u0325\3\16"+
    "\1\u0326\1\u0313\6\u0325\10\16\1\u0326\3\16\1\u0326\1\u0314"+
    "\6\u0326\10\16\1\u0315\3\16\1\u0316\1\u0327\6\u0315\10\16"+
    "\1\u0316\3\16\1\u0316\1\u0328\6\u0316\10\16\1\u0329\2\16"+
    "\1\147\1\u032a\1\16\6\u0329\10\16\1\u032a\2\16\1\267"+
    "\1\u032a\1\16\6\u032a\10\16\1\u0325\1\u011c\2\16\1\u0326"+
    "\1\u0313\6\u032b\10\16\1\u0325\1\301\2\16\1\u0326\1\u0313"+
    "\6\u032b\10\16\1\u0325\1\301\2\16\1\u0326\1\u0313\6\u032c"+
    "\10\16\1\u0325\1\301\2\16\1\u0326\1\u0313\1\u032c\1\u032b"+
    "\4\u032c\10\16\1\u0326\1\u0169\2\16\1\u0326\1\u0314\6\u032d"+
    "\10\16\1\u0326\1\u0110\2\16\1\u0326\1\u0314\6\u032d\10\16"+
    "\1\u0326\1\u0110\2\16\1\u0326\1\u0314\6\u032e\10\16\1\u0326"+
    "\1\u0110\2\16\1\u0326\1\u0314\1\u032e\1\u032d\4\u032e\10\16"+
    "\1\u032f\2\16\1\147\1\u0330\1\u0301\6\u032f\10\16\1\u0330"+
    "\2\16\1\267\1\u0330\1\u0302\6\u0330\10\16\1\u032f\1\u011c"+
    "\1\16\1\147\1\u0330\1\u0301\6\u0331\10\16\1\u032f\1\301"+
    "\1\16\1\147\1\u0330\1\u0301\6\u0331\10\16\1\u0330\1\u0169"+
    "\1\16\1\267\1\u0330\1\u0302\6\u0332\10\16\1\u0330\1\u0110"+
    "\1\16\1\267\1\u0330\1\u0302\6\u0332\10\16\1\u0333\3\16"+
    "\1\u0334\1\u0313\6\u0333\10\16\1\u0334\3\16\1\u0334\1\u0314"+
    "\6\u0334\13\16\1\147\23\16\1\267\20\16\1\u0335\2\16"+
    "\1\147\1\u0336\1\16\6\u0335\10\16\1\u0336\2\16\1\267"+
    "\1\u0336\1\16\6\u0336\10\16\1\u0333\1\u011c\2\16\1\u0334"+
    "\1\u0313\6\u0337\10\16\1\u0333\1\301\2\16\1\u0334\1\u0313"+
    "\6\u0337\10\16\1\u0334\1\u0169\2\16\1\u0334\1\u0314\6\u0338"+
    "\10\16\1\u0334\1\u0110\2\16\1\u0334\1\u0314\6\u0338\13\16"+
    "\1\147\1\16\1\u0301\21\16\1\267\1\16\1\u0302\17\16"+
    "\1\u011c\1\16\1\147\1\16\1\u0301\6\u01db\11\16\1\u0169"+
    "\1\16\1\267\1\16\1\u0302\6\u022d\15\16\1\u0313\23\16"+
    "\1\u0314\16\16\1\u0327\2\16\1\147\1\u0328\1\16\6\u0327"+
    "\10\16\1\u0328\2\16\1\267\1\u0328\1\16\6\u0328\11\16"+
    "\1\u011c\3\16\1\u0313\6\u01db\11\16\1\u0169\3\16\1\u0314"+
    "\6\u022d\5\16";

  private static int [] zzUnpackTrans() {
    int [] result = new int[16240];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\u0338\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[824];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /* user code: */
    private Parser parser;
    private int range;
    
    
    public void analyse(Parser p,int r) {
        if (!p.has(r)) 
            return;
        analyse(p,r,p.uri,p.start(r),p.end(r));
    }
    public void analyse(Parser p,int r, String str) {
        analyse(p,r,str,0,str.length());
    }
    synchronized private void analyse(Parser p,int r, String str, int start, int finish) {
        parser = p;
        range = r;
        yyreset(null);
        useXhost = false;
        this.zzAtEOF = true;
        int length = finish - start;
        zzEndRead = length;
        while (length > zzBuffer.length)
            zzBuffer = new char[zzBuffer.length*2];
        str.getChars(
                start,
                finish,
                zzBuffer,
                0);
       try {
            yylex();
       }
       catch (java.io.IOException e) {
       }
       xhost(str,start,finish);
    }
    LexerXHost lexXHost = new LexerXHost((java.io.Reader) null);
    boolean useXhost;
    private void xhost(String str, int start, int finish) {
       if (useXhost) {
           lexXHost.analyse(parser,range,str,start,finish);
       }
    }
    private void error(int e) {
        switch(e) {
          case NOT_DNS_NAME:
          case NON_URI_CHARACTER:
            useXhost = true;
            break;
        }
        parser.recordError(range,e);
    }
    
    private void rule(int rule) {
        parser.matchedRule(range,rule);
    }



  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  LexerHost(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  LexerHost(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 72) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzPushbackPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead < 0) {
      return true;
    }
    else {
      zzEndRead+= numRead;
      return false;
    }
  }

    
  /**
   * Closes the input stream.
   */
  private final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  private final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = zzPushbackPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  private final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  private final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  private final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  private final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  private final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  private void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = zzLexicalState;


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 48: 
          { rule(39); error(ACE_PREFIX);error(DNS_LABEL_DASH_START_OR_END);error(LOWERCASE_PREFERRED);
          }
        case 62: break;
        case 9: 
          { rule(19); error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);
          }
        case 63: break;
        case 38: 
          { rule(1);
          }
        case 64: break;
        case 44: 
          { rule(35); error(ACE_PREFIX);error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);
          }
        case 65: break;
        case 60: 
          { rule(4); error(IP_V4_OCTET_RANGE);
          }
        case 66: break;
        case 27: 
          { rule(57); error(DOUBLE_DASH_IN_REG_NAME);error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);
          }
        case 67: break;
        case 37: 
          { rule(58); error(DOUBLE_DASH_IN_REG_NAME);error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 68: break;
        case 26: 
          { rule(54); error(DOUBLE_DASH_IN_REG_NAME);error(DNS_LABEL_DASH_START_OR_END);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 69: break;
        case 58: 
          { rule(44); error(ACE_PREFIX);error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 70: break;
        case 57: 
          { rule(42); error(ACE_PREFIX);error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 71: break;
        case 4: 
          { rule(15); error(LOWERCASE_PREFERRED);
          }
        case 72: break;
        case 23: 
          { rule(27); error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);
          }
        case 73: break;
        case 47: 
          { rule(34); error(ACE_PREFIX);error(NON_URI_CHARACTER);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 74: break;
        case 7: 
          { rule(14); error(DNS_LABEL_DASH_START_OR_END);
          }
        case 75: break;
        case 36: 
          { rule(28); error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 76: break;
        case 56: 
          { rule(8); error(IPv6ADDRESS_SHOULD_BE_LOWERCASE);error(IP_V4_HAS_FOUR_COMPONENTS);
          }
        case 77: break;
        case 6: 
          { rule(17); error(NON_URI_CHARACTER);
          }
        case 78: break;
        case 35: 
          { rule(59); error(DOUBLE_DASH_IN_REG_NAME);error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);
          }
        case 79: break;
        case 51: 
          { rule(38); error(ACE_PREFIX);error(DNS_LABEL_DASH_START_OR_END);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 80: break;
        case 20: 
          { rule(51); error(DOUBLE_DASH_IN_REG_NAME);error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);
          }
        case 81: break;
        case 8: 
          { rule(16); error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 82: break;
        case 34: 
          { rule(56); error(DOUBLE_DASH_IN_REG_NAME);error(DNS_LABEL_DASH_START_OR_END);error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 83: break;
        case 52: 
          { rule(41); error(ACE_PREFIX);error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);
          }
        case 84: break;
        case 49: 
          { rule(36); error(ACE_PREFIX);error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 85: break;
        case 43: 
          { rule(32); error(ACE_PREFIX);error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 86: break;
        case 39: 
          { rule(2); error(IPv6ADDRESS_SHOULD_BE_LOWERCASE);
          }
        case 87: break;
        case 40: 
          { rule(6); error(IPv6ADDRESS_SHOULD_BE_LOWERCASE);
          }
        case 88: break;
        case 32: 
          { rule(31); error(ACE_PREFIX);error(LOWERCASE_PREFERRED);
          }
        case 89: break;
        case 5: 
          { rule(21); error(DNS_LABEL_DASH_START_OR_END);
          }
        case 90: break;
        case 28: 
          { rule(26); error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 91: break;
        case 3: 
          { rule(13);
          }
        case 92: break;
        case 33: 
          { rule(52); error(DOUBLE_DASH_IN_REG_NAME);error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 93: break;
        case 31: 
          { rule(29); error(ACE_PREFIX);
          }
        case 94: break;
        case 42: 
          { rule(33); error(ACE_PREFIX);error(NON_URI_CHARACTER);
          }
        case 95: break;
        case 54: 
          { rule(43); error(ACE_PREFIX);error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);
          }
        case 96: break;
        case 13: 
          { rule(18); error(NON_URI_CHARACTER);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 97: break;
        case 29: 
          { rule(50); error(DOUBLE_DASH_IN_REG_NAME);error(NON_URI_CHARACTER);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 98: break;
        case 19: 
          { rule(48); error(DOUBLE_DASH_IN_REG_NAME);error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 99: break;
        case 16: 
          { rule(46); error(DOUBLE_DASH_IN_REG_NAME);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 100: break;
        case 2: 
          { rule(9); error(IP_V6_OR_FUTURE_ADDRESS_SYNTAX);
          }
        case 101: break;
        case 14: 
          { rule(45); error(DOUBLE_DASH_IN_REG_NAME);
          }
        case 102: break;
        case 45: 
          { rule(60); error(DOUBLE_DASH_IN_REG_NAME);error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 103: break;
        case 61: 
          { rule(7); error(IPv6ADDRESS_SHOULD_BE_LOWERCASE);error(IP_V4_OCTET_RANGE);
          }
        case 104: break;
        case 25: 
          { rule(55); error(DOUBLE_DASH_IN_REG_NAME);error(DNS_LABEL_DASH_START_OR_END);error(LOWERCASE_PREFERRED);
          }
        case 105: break;
        case 10: 
          { rule(23); error(DNS_LABEL_DASH_START_OR_END);error(LOWERCASE_PREFERRED);
          }
        case 106: break;
        case 1: 
          { rule(61); error(NOT_DNS_NAME);
          }
        case 107: break;
        case 55: 
          { rule(10);
          }
        case 108: break;
        case 24: 
          { rule(53); error(DOUBLE_DASH_IN_REG_NAME);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 109: break;
        case 11: 
          { rule(22); error(DNS_LABEL_DASH_START_OR_END);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 110: break;
        case 41: 
          { rule(30); error(ACE_PREFIX);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 111: break;
        case 46: 
          { rule(37); error(ACE_PREFIX);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 112: break;
        case 50: 
          { rule(5); error(IP_V4_HAS_FOUR_COMPONENTS);
          }
        case 113: break;
        case 59: 
          { rule(11); error(IP_V4_OCTET_RANGE);
          }
        case 114: break;
        case 30: 
          { rule(3);
          }
        case 115: break;
        case 53: 
          { rule(40); error(ACE_PREFIX);error(DNS_LABEL_DASH_START_OR_END);error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 116: break;
        case 18: 
          { rule(12); error(IP_V4_HAS_FOUR_COMPONENTS);
          }
        case 117: break;
        case 12: 
          { rule(25); error(DNS_LABEL_DASH_START_OR_END);error(NON_URI_CHARACTER);
          }
        case 118: break;
        case 17: 
          { rule(49); error(DOUBLE_DASH_IN_REG_NAME);error(NON_URI_CHARACTER);
          }
        case 119: break;
        case 15: 
          { rule(47); error(DOUBLE_DASH_IN_REG_NAME);error(LOWERCASE_PREFERRED);
          }
        case 120: break;
        case 21: 
          { rule(20); error(NON_URI_CHARACTER);error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 121: break;
        case 22: 
          { rule(24); error(DNS_LABEL_DASH_START_OR_END);error(LOWERCASE_PREFERRED);error(DNS_LABEL_DASH_START_OR_END);
          }
        case 122: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return YYEOF;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
