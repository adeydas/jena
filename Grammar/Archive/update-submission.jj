SPARQL/Update sumission - just the submission part.
   http://www.w3.org/Submission/SPARQL-Update/

    // --------
    // [done] INSERT/DELETE DATA [INTO? or FROM? <uri>] {} => INSERT/DELETE DATA { GRAPH <uri> {}}

    // [done] INSERT INTO? <uri> {} (WHERE {})? => INSERT { GRAPH <uri> {} } WHERE {}  
    // [done] DELETE FROM? <uri> {} (WHERE {})? => DELETE { GRAPH <uri> {} } WHERE {}  
    
    // [done] MODIFY [<uri>*] D{} I{} W{} => WITH* D{} I{} W{}
    
    // [done] LOAD <url> (INTO <uri>)? ==> LOAD <url> (INTO GRAPH <uri>)

    // [done] CLEAR / CREATE / DROP 
    //    GRAPH <uri> no change
    //    empty => DEFAULT
    // --------

    
#ifdef UPDATE_SUBMISSION
void Update() : { }
{
    { startUpdateRequest() ; }
    ( Update1() )+
    { finishUpdateRequest() ; }
}

void Update1() : { UpdateSubmission up = null ; GraphMgt mgt ; }
{
  (  up = Modify() | up = Insert() | up = Delete() | 
     up = Load() | up = Clear() |  up = Create() | up = Drop() )
    { getUpdateRequestSubmission().addUpdate(up) ; }
}

UpdateModify Modify() : 
{ UpdateModify up = new UpdateModify() ; String iri ; Template template ; Element el ; }
{
    <MODIFY>
    ( iri = GraphIRI() { up.addGraphName(iri) ; } )*
    <DELETE> template = ConstructTemplate() { up.setDeleteTemplate(template) ; }
    <INSERT> template = ConstructTemplate() { up.setInsertTemplate(template) ; }
    ( el = UpdatePattern() { up.setPattern(el) ; } )?
    { return up ; }
}

UpdateSubmission Delete() : { UpdateSubmission up ; }
{
  <DELETE> 
  ( up = DeleteData() | up = DeleteTemplate() )
    { return up ; }
}

UpdateSubmission DeleteData() : 
{ UpdateDeleteData update = new UpdateDeleteData() ; 
  String iri ; Template template ;
  Token t ; }
{
    t = <DATA>
    ((<FROM>)? iri = IRIref() { update.addGraphName(iri) ; } )*
   template = ConstructTemplate()
   { Graph triples = convertTemplateToTriples(template,
                                        t.beginLine, t.beginColumn) ;
     update.setData(triples) ;
     return update ;
    }
}

UpdateSubmission DeleteTemplate() : 
{ UpdateDelete up = new UpdateDelete() ; String iri ; Template template ; Element el ;  }
{
  ((<FROM>)? iri = IRIref() { up.addGraphName(iri) ; } )*
  template = ConstructTemplate() { up.setDeleteTemplate(template) ; }
    ( el = UpdatePattern() { up.setPattern(el) ; } )?
    { return up ; }
}

UpdateSubmission Insert() : { UpdateSubmission up ; }
{
  <INSERT> 
  ( up = InsertData() | up = InsertTemplate() )
    { return up ; }
}

UpdateSubmission InsertData() :
{ UpdateInsertData update = new UpdateInsertData() ;
  String iri ; Template template ;
  Token t ; }
{
   t = <DATA>
   ((<INTO>)? iri = IRIref() { update.addGraphName(iri) ; } )*
   template = ConstructTemplate()
   { Graph triples = convertTemplateToTriples(template,
                                        t.beginLine, t.beginColumn) ;
     update.setData(triples) ;
     return update ;
    }
}

UpdatePattern InsertTemplate() :
{ UpdateInsert up = new UpdateInsert() ; String iri ; Template template ; Element el ; }
{
  ((<INTO>)? iri = IRIref() { up.addGraphName(iri) ; } )*
  template = ConstructTemplate() { up.setInsertTemplate(template) ; }
    ( el = UpdatePattern() { up.setPattern(el) ; } )?
    { return up ; }
}

String GraphIRI() : { String iri ; }
{
    <GRAPH> iri = IRIref() { return iri ; }
}

UpdateLoad Load() : { UpdateLoad up = new UpdateLoad() ; String iri ;}
{
    <LOAD> ( iri = SourceSelector() { up.addLoadIRI(iri) ; } )+
    (<INTO> iri = IRIref() { up.setGraphName(iri) ; } )? 
    { return up ; }
}

UpdateClear Clear() : { UpdateClear up = new UpdateClear(); String iri ; }
{
    <CLEAR>
    ( iri = GraphIRI() { up.setGraphName(iri) ; } )?
    { return up ; }
}

UpdateCreate Create() : { boolean silent = false ; String iri ; }
{
    <CREATE>
    (<SILENT> { silent = true ; } )?
    iri = GraphIRI()
    { return new UpdateCreate( iri, silent); }
}

UpdateDrop Drop() : { boolean silent = false ; String iri ; }
{
    <DROP>
    (<SILENT>{  silent = true ; } )?
    iri = GraphIRI()
    { return new UpdateDrop(iri, silent) ; }
}

Element UpdatePattern() : { Element el ; }
{
   (<WHERE>) el = GroupGraphPattern() { return el ; }
}

// void Transaction() : {}
// {
//     TransBegin() | TransCommit() | TransAbort()
// }
// 
// void TransBegin() : {}
// {
//     <BEGIN> (IRIref())?
//     { System.out.println("++ Begin") ; }
// }
// 
// void TransCommit() : {}
// {
//     <COMMIT> (IRIref())?
//     { System.out.println("++ Commit") ; }
// }
// 
// void TransAbort() : {}
// {
//     <ABORT> (IRIref())?
//     { System.out.println("++ Abort") ; }
// }
// End UPDATE_SUBMISSION
#endif
