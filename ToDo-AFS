SDB ToDo list (and general notes)
=================================

+ Closing Derby properly? "sdbdump --format N3" breaks the DB

+ tests for ORDER BY and other integrations

+ Test for special case structures (testing/Structure)
  WorkSpace area?

+ Need for coalesce code (TransformSDB, SqlCoalesce) if we pick the
  righermost column by scope (if optional)? No - but fully test.
  Including where second optional, guarded by ?w has card(2) new var
  Still need a join condition across coalesce vars.

+ Precedence-driven output for SqlExpr // SqlExprGenerateSQL, not lots of nesting.

+ Features:
  In desc file for now.

+ Values and conditions : reactivate condition compilation.
  Need value access
  Isolate QC2.insertValueGetter

+ Ugly Store.getNodeKeyColName()

+ Hash constants
   need separate formatters and loaders.

+ cmd: 
  @ --load for sdb.sdbquery --format
     Done - but should be ModData/ModInit/ModSetup
     
+ Add query tests :
  SELECT * {}
  SELECT ?x {}
  SELECT * { P[?x] OPTIONAL { P[!?x] OPTIONAL { OPTIONAL P[?x] } } }
  { opt ... } JOIN { opt ... } 
  { opt ... } JOIN { fixed } 
  
+ Abstracting databases:
  Graph for an SDBConnection (or get from DB).
    That is the unit of database if there are multiple stores per connection.
    Or maybe a Store features?
      A/ regex syntax
      B/ Table exists code (Classes, Value tables etc).

+ Abstract columns types then simple templating.
        VARCHAR/TEXT/BLOB syntax
        HSQLDB: VARCHAR unlimited
        MySQL: TEXT // PosgreSQL: TEXT, bytea

+ more in .shared.

+ ValueTables
  String value table
    With no URIs, much shorter.
    Full text indexing where available?

+ Graph pattern tables

SqlExpr::
IJ-R-T => IJ(r)-T is done specially - make a special stage (RA optimizer?)
OR improve the generation of SQL output and leave the tree much as is.
OR canonical tree SPJ

== Next
  ==> Performance testing framework
