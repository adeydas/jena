PREFIX composite: <http://www.topbraid.org/2007/05/composite.owl#>
PREFIX rdf:       <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX sxml:      <http://topbraid.org/sxml#>
PREFIX fn:        <http://www.w3.org/2005/xpath-functions#>
PREFIX pmo:       <http://www.bimtoolset.org/ontologies/pmo.owl#>
PREFIX bim:       <http://www.bimtoolset.org/ontologies/IntUBE-EnergyBIM.owl#>
PREFIX gbx:       <http://www.bimtoolset.org/data/Byers-ori.owl#>
PREFIX xsd:    <http://www.w3.org/2001/XMLSchema#>
SELECT *
{
   GRAPH <http://www.example.com/model>
   {
      {
         {
            [] a gbx:Surface;
               gbx:id-Surface ?surfaceId ;
               composite:child [
                  rdf:type gbx:AdjacentSpaceId;
                  composite:index ?side;
                  gbx:spaceIdRef-AdjacentSpaceId ?face;
               ];
               composite:child [
                  rdf:type gbx:AdjacentSpaceId;
                  composite:index 1;
                  gbx:spaceIdRef-AdjacentSpaceId ?face1;
               ];
               composite:child [
                  a gbx:PlanarGeometry;
                  composite:child ?loop;
               ]
            LET (?facename := IRI(fn:concat("http://www.bimtoolset.org/ontologies/IntUBE-EnergyBIM-Data.owl#", str(?surfaceId), "_To_", str(?face))))
         } UNION {
            [] a gbx:Surface;
               composite:child [
                  rdf:type gbx:AdjacentSpaceId;
                  composite:index ?side;
                  gbx:spaceIdRef-AdjacentSpaceId ?face;
               ];
               composite:child [
                  rdf:type gbx:AdjacentSpaceId;
                  composite:index 1;
                  gbx:spaceIdRef-AdjacentSpaceId ?face1;
               ];
               composite:child [
                  a gbx:Opening;
                  gbx:id-Opening ?surfaceId ;
                  composite:child [
                     a gbx:PlanarGeometry;
                     composite:child ?loop;
                  ];
               ]
            LET (?facename := IRI(fn:concat("http://www.bimtoolset.org/ontologies/IntUBE-EnergyBIM-Data.owl#", str(?surfaceId),"_To_", str(?face))))
         }
      }
      {
         SELECT ?loop (COUNT (?points) AS ?max) 
         {
            GRAPH <http://www.example.com/model>
            {
               ?loop composite:child ?points
            }
         }
         GROUP BY ?loop
      }
      ?loop composite:child [
         composite:index ?order;
         a gbx:CartesianPoint ;
         composite:child [
            composite:index 0 ;
            composite:child [ sxml:text ?valx ];
         ];
         composite:child [
            composite:index 1 ;
            composite:child [ sxml:text ?valy ];
         ];
         composite:child [
            composite:index 2 ;
            composite:child [ sxml:text ?valz ];
         ];
      ].
   }
   GRAPH <http://www.bimtoolset.org/ontologies/IntUBE-EnergyBIM-Data.owl>
   {
      ?vertex a  bim:Vertex;
         pmo:hasPart_directly [
            bim:x ?valx;
            bim:y ?valy;
            bim:z ?valz;
         ].
      ?facename pmo:hasPart_directly ?geometry.
      ?geometry a bim:FaceGeometryExtended.
      {
         {
            FILTER (?side = 1) .
            LET (?index := ?order).
         } UNION {
            FILTER (?side = 2)
            LET (?index := ?max - ?order - 1). 
         }
      }
   }
}
