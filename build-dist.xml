<project xmlns:ivy="antlib:org.apache.ivy.ant" name="dist">
  
  <!-- ========================================== -->
  <!-- Additional functionality for creating a zipped release
       Assumes build-lib.xml is imported
   -->
  <!-- Distribution area -->

  <property name="dist.name"              value="${Name}-${version}"/>
  <property name="release.zipfile"        value="${name}-${version}.zip"/>

  <property name="dist.root"              value="dist"/>
  <property name="dist.dir"               value="${dist.root}/${dist.name}"/>

  <!-- ==== Release -->

  <target name="release" depends="copy-init,copy-dist,zip-release"
	  description="Build a release zip"/>

  <target name="package" depends="copy-init,copy-dist,zip-release"/>

  <target name="copy-init">
    <delete dir="${dist.dir}" />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${dist.dir}/${lib.dir}"/>
  </target>

  <target name="copy-dist" depends="clean,copy-init,jar,javadoc,test">

    <copy todir="${dist.dir}/${lib.dir}">
      <!-- includes arq.jar and arq-extra.jar -->
      <fileset dir="${lib.dir}" includes="*.jar"/>
    </copy>
    
    <!-- Source code -->
    <zip zipfile="${dist.dir}/${src.zipfile}">
      <fileset refid="fileset.src"/>
    </zip>

    <copy todir="${dist.dir}/${test.dir}">
      <fileset dir="${test.dir}"/>
    </copy>

    <!-- bin/ (and bat/ if any) -->
    <copy todir="${dist.dir}/bin">
      <fileset dir="bin"/>
    </copy>
    <copy todir="${dist.dir}/bat">
      <fileset dir="bat"/>
    </copy>

    <copy todir="${dist.dir}/" file="copyright.txt"/>
    <copy todir="${dist.dir}/" file="README.txt"/>
    <copy todir="${dist.dir}/" file="ChangeLog.txt"/>
    <copy todir="${dist.dir}/" file="test.sh"/>

    <!-- Vocabularies  -->
    <copy todir="${dist.dir}/${vocab.dir}">
      <fileset dir="${vocab.dir}" includes="**"/>
    </copy>

    <!-- Grammars -->
    <copy todir="${dist.dir}/${grammar.dir}">
      <fileset dir="${grammar.dir}">
        <!-- Just the minimum to produce a buildable grammar -->
        <include name="master.jj"/>
        <include name="sparql.jj"/>
        <include name="sparql-update.jj"/>
        <include name="arq.jj"/>
        <include name="grammar"/>
      </fileset>
    </copy>


    <!-- Documentation -->
    <!-- Javadoc is part of the documentation directory -->
    <copy todir="${dist.dir}/${doc.dir}">
      <fileset dir="${doc.dir}">
        <include name="**"/>
        <!-- Drafting area -->
        <exclude name="**/Drafts/**"/>
        <exclude name="**/index-css.html"/>
        <!-- FrontPage internal directories -->
        <exclude name="**/_vti*/**"/>
        <exclude name="**/_private/**"/>
        <exclude name="**/javadoc-all/**"/>
        <exclude name="**/desktop.ini"/>
      </fileset>
    </copy>

    <!-- Code examples -->
    <copy  todir="${src.examples.dir}">
      <fileset dir="${src.examples.dir}"/>
    </copy>
    <copy todir="${dist.dir}/${doc.dir}/${src.examples.dir}">
      <fileset dir="${src.examples.dir}"/>
      <mapper type="glob" from="*.java" to="*.java.txt"/>
    </copy>

  </target>

  <target name="zip-release">
    <!-- Build the zip of the distribution -->
    <delete file="${dist.root}/${release.zipfile}"/>
    <zip zipfile="${dist.root}/${release.zipfile}">
      <fileset dir="dist" includes="${dist.name}/**"/>
    </zip>
  </target>

  <!-- To calm error checking -->
  <target name="test"/>
  <target name="clean"/>
  <target name="artifacts"/>
  <target name="jar"/>
  <target name="javadoc"/>
  
  <target name="clean-dist">
    <delete dir="${dist.root}"/>
  </target>

  <target name="clean-dist-area" description="Clean distribution area">
    <delete dir="${dist.root}"/>
    <mkdir  dir="${dist.root}"/>
  </target>



</project>
