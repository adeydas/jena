<project xmlns:ivy="antlib:org.apache.ivy.ant" name="ARQ" default="build">

  <!-- Configuration as a propertied file ? -->
  <!-- <property file="tdb-build.properties"/> -->

  <!-- ========================================== -->
  <!-- ==== Configuration  -->
  <property name="Name"                   value="ARQ"/>
  <property name="name"                   value="arq"/>

  <property environment="env"/>

  <!-- The major and minor version numbers  -->
  <property name="version-major"   		value="2"/>
  <property name="version-minor"        value="7"/>
  <property name="version-revision"     value="1"/>
  <property name="version-status"       value="-dev"/>
  <property name="version"
            value="${version-major}.${version-minor}.${version-revision}${version-status}"/>
  
  <!-- javadoc -->
  <property name="copyright.text"
	    value="Copyright &#169; 2007, 2008, 2009 Hewlett-Packard Development Company, LP"/>
  <property name="javadoc.packages"     value="com.hp.hpl.jena.query,com.hp.hpl.jena.update,com.hp.hpl.jena.query.larq"/>
  <property name="javadoc.all.packages" value="com.hp.hpl.jena.query.*,com.hp.hpl.jena.sparql.*"/>
  
  <target name="main" depends="jar"/>

  <!--=============================================-->
  <!-- Two jars -->
  
  <property name="jarfile"         value="${name}-${version}.jar"/>
  <property name="jarfile.lib"     value="${name}.jar"/>

  <property name="jarfile.extra"   value="${name}-extra-${version}.jar"/>
  <property name="jarfile.extra.lib"   value="${name}-extra.jar"/>

  <property name="arq.path.impl"       value="com/hp/hpl/jena/sparql"/>
  <property name="extra.classes" 
      	    value="${arq.path.impl}/**/test/** ${arq.path.impl}/**/junit/** arq/** ${arq.path.impl}/**/suites/**"/>

  <!-- Override -->
  <!-- ?? What about the properties file -->
  <target name="package.jar" depends="clean-jar,compile,make-jar-core,make-jar-extra">
    <!-- And place in lib/ as unversioned files -->
    <copy file="${build.dir}/${jarfile}" tofile="${lib.dir}/${jarfile.lib}"/>
    <copy file="${build.dir}/${jarfile.extra}" tofile="${lib.dir}/${jarfile.extra.lib}"/>
  </target>

  <target name="clean-jar">
    <delete file="${lib.dir}/${jarfile.lib}"/>
    <delete file="${lib.dir}/${jarfile.extra.lib}"/>
  </target>

  <target name="make-jar-core" depends="compile">
    <!-- Core jar -->
    <delete file="${build.dir}/${jarfile}"/>
    <antcall target="build-properties"/>
    <jar destfile="${build.dir}/${jarfile}" index="yes">
      <fileset dir="${build.classes.dir}" excludes="${extra.classes}"/>
    </jar>
  </target>
   
  <!-- Tests and examples jar -->
  <target name="make-jar-extra" depends="compile">
    <delete file="${build.dir}/${jarfile.extra}"/>
    <jar destfile="${build.dir}/${jarfile.extra}" index="yes">
      <fileset dir="${build.classes.dir}" includes="${extra.classes}"/>
    </jar>
  </target>
  <!--=============================================-->

  <!-- Sources as a path -->
  <property name="src.dir"                value="src"/>
  <property name="src.test.dir"           value="src-test"/>
  <!--
  <property name="src.lib.dir"            value="src-lib"/>
  <property name="src.lib.test.dir"       value="src-lib-test"/>
  -->
  <property name="src.examples.dir"       value="src-examples"/>
  <property name="src.dev.dir"            value="src-dev"/>

  <!-- Coordinate with ivysetting.xml -->
  <property name="publish.resolver"       value="dev-publish"/>

  <!-- Metadata -->
  <property name="build.metadata.file"	       value="com/hp/hpl/jena/sparql/arq-properties.xml"/>
  <property name="build.metadata.file.src"     value="arq-properties.xml"/>

  <!-- Distribution only -->
  <property name="vocab.dir"       value="Vocabularies"/>
  <property name="test.dir"        value="testing"/>
  <property name="grammar.dir"     value="Grammar"/>

  <!-- Source code -->
  <path id="java.source.path.main">
    <pathelement path="${src.dir}"/>
    <pathelement path="${src.examples.dir}"/><!-- The examples are in the test suite -->
    <!--<pathelement path="${src.lib.dir}"/>-->
  </path>    

  <path id="java.source.path.test">
    <pathelement path="${src.test.dir}"/>
    <!-- <pathelement path="${src.lib.test.dir}"/>-->
  </path>    

  <path id="java.source.path">
    <path refid="java.source.path.main"/>
    <path refid="java.source.path.test"/>
  </path>

  <!-- Sources as fileset (want path=>fileset to avoid the duplication here) -->

  <fileset dir="." id="fileset.src">
    <include name="${src.dir}/**/*.java"/>
    <include name="${src.test.dir}/**/*.java"/>
    <!--<include name="${src.lib.dir}/**/*.java"/>-->
    <!--<include name="${src.lib.test.dir}/**/*.java"/>-->
  </fileset>

  <!-- ============================== -->

  <import file="build-lib.xml"/>
  <import file="build-dist.xml"/>

  <target name="pre-run-junit">
  </target>

</project>
