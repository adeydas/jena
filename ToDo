SDB ToDo list (and general notes)
=================================

SqlExpr::
IJ-R-T => IJ(r)-T is done specially - make a special stage (RA optimizer?)
OR improve the generation of SQL output and leave the tree much as is.
OR canonical tree SPJ

B/ FILTER ( ?x = "string" ) 
   FILTER ( ?x = <uri> ) 
     design - need "encode"/getLex indirection then remove C_

C/ Out-of-scope variables / surpessed tests

D/ HSQL/MySQL joint testing

DRY:
QC1 and Q2 match/processSlot have much in common.
  QC_Slot?

== Next
  1/ Better condition compilation
     Layout1 conditions?
     
  2/ Testing
     Build coverage test suite
     ?x :p ?x
     
  3/ (Detect fn:starts-with function) - do something!
  4/ ==> Performance testing

+ Variable tracking
  Use SQL COALESCE for OPTIONALs with shared variables

c.f. SQLCache and returning prepared statements
  Named parameters in INSERT for robustness.
  Sequences, not autoIncrement

Encode upper/lower case into SQL identifiers.
  SQLidAllocate(String) => String
  SPARQLid2SQLid and reverse
    Off ramp only needed => not needed at all but eaier to see what's going on
    
Need to handle connection management to be concurrency and connection pooling friendly.

+ Test for 
   + "?x :p ?x"
   + FILTER and out-of-block variables ; OPTIONAL { FILTER (?x = .. ) ?x :p ?q }
   + Nested optionals with var not used by outer one (bottom up/top down issue)
   + Two optionals with a shared var

+ SQL comparisions
   SELECT FROM .. ON .. with SELECT FROM .. WHERE

   Inner SELECT
   SELECT FROM (SELECT .... WHERE) AS T [LEFT] JOIN ...
   with
   SELECT FROM T AS [LEFT] JOIN ... WHERE ...
   (should be the same but ...)
