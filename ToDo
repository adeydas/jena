==== ARQ ToDo

ARQ2-beta
+ ** Document "stages"

-----

== Core

+ Test for qexec evaluation => tests algebra

+ Alternative indexes
  LARQ idea - extracted.  Object ==> node/subject
  
+ REDUCED tests :-(

+ Serilization: 
    redo "prefix" to be SSE compatible.
    op: triples/quads as lists themselves (+builder)

+ Property function to property path expression

+ Non-distinguished variable removal.
   StageBuilder - strict place
   In a project (or pseudo project) - does it once.
      Need test case : { _:a :p ?v. ?v :splitIRI (?ns ?ln) . _a :p ?w } 
      
+ testing QE1 and QE2 and QE3 in the same test run

+ Commands
  + qtest to use modules (and qexpr)
    ModVersion

== Algebra & SSE

+ OpWalker  - only used for getting vars, and that needs to truncate a walk.
+ OpExt - is this still workable?
+ Extensions:
  Expr: (exists (pattern ...))
  (group ...)
  (assign ?x expr) (is this SELECT/project?)
  (table ...) # TableBuilder for now!
  (setq ?x :y)
  (set (?x :y) (?z 1.5) ) -- set in current solution
  (binding () (?x :y) (?y 1))  () ==> parent [or make "extend"] 
  
  Combine with assign (binding (other binding))
  (join ...) to do assign
+ Prefix writing.
+ qexec tidy/integration
+ Tests
+ Keywords: nil for () , true, false (c.f. Scheme's #f #t except # has gone _)
  _t _f


== LARQ

+ LARQ assembler

+ LARQ Doc internals
  Fields: index, lex/lang/datatype, uri, bnode

== Documentation

+ Document list handling as a specific page.
  + Internals
  	Query iterators
  	Bindings

+ Writing filter functions [Done]
+ Writing property functions

+ Document making and using datasets
+ Location-mapping and FROM/FROM NAMED
  
== Core

+ XML results: process xml:lang on other elements than just <literal>
  Documentation for XML result set processing
