==== ARQ ToDo

ARQ2-beta
+ Stages
+ E1 cleanup (opt?)
+ Tests

-----

+ Expose getActiveGraph to filter functions in some safe way because EXISTS will/might need it.
  FunctionBase - but how? Functions don't see ExecutionContext any more!
  Function - take ExecutionContext // FunctionBase, mask it?
  Or is EXISTS a different form?

+ Very simple non-streaming table usage.
  No iterators.
  TableSimple is the only streaming point - and often materialized.
  And used via TableFactory.create(QueryIterator) as well as direct

+ Tidy up main.Eval

+ Transform to apply to more than just pattern ops?

+ Algebra:
    // TODO property function determination by general tree rewriting - BGP special first.
    //  By general BGP rewriting.  Stages.
    //  (General tree rewrite is "Op => Op")
    //   OpExtBase requires eval() but need better extensibility?
    
+ test cases:
  Optional with two filters
     *  { :x :p ?v . OPTIONAL { FILTER(?v = 1) } } -- Algebra test needed
     *  { :x :p ?v . { :y :q ?v OPTIONAL { FILTER(?v = 1) } } } -- Algebra test needed
     *  Filter placement (internal tests)
     *  Classifier J and LJ - internal
  
+ Property function to property path expression

+ AltMatcher - Remove bnodes in QueryIterBlockTriplesAlt

+ testing QE1 and QE2 and QE3 in the same test run

+ Convenient: Get the version ID (property function?)
  Generalize to system functions.
    

+ Commands
  + qtest to use modules.

== Documentation

+ Document API (more)
    Document lists
    Document symbols and configuration
	Writing filter functions (example 
	Writing property functions
    Creating datasets
  Document making and using datasets
  Document configuration (?)
  location-mapping and FROM/FROM NAMED
  
== Core

+ XML results: process xml:lang on other elements than just <literal>
  Documentation for XML result set processing
