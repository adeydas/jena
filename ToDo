SDB ToDo list (and general notes)
=================================

+ Proper order for BGPs.

+ List arguments to property functions (ARQ)

+ StoreRDB
  1/ use jena assembler for ModelRDB? Separate section in config graph
  2/ Need to fudge to work with jdbc:none.
  

+ more in .shared.

+ starts-with strings.
  Partial patterns.
  
+ ValueTables

+ HSQL (inc large ?)

+ String value table
   With no URIs, much shorter.
   Full text indexing where available

+ "Proper order" for BGPs, and better SDB handling of whole BGP
  Better order to constraint inclusion (as soon as possible, record variables already offramped)
  (Or a big SELECT-WHERE)

+ Use SQL COALESCE for OPTIONALs with shared variables

+ Subquery scoping enhancements

+ Config loader
    sdbmetaload --sdb sdb.ttl --name=<name> FILE
    sdbmetadump --sdb sdb.ttl --name=<name>
  or
    sdbconfig --load --name=<name> FILE
  

SqlExpr::
IJ-R-T => IJ(r)-T is done specially - make a special stage (RA optimizer?)
OR improve the generation of SQL output and leave the tree much as is.
OR canonical tree SPJ

HSQL/MySQL joint testing

== Next
  ==> Performance testing framework

Detachable connections

Slony-I replication support (unique keys)

c.f. SQLCache and returning prepared statements
  Named parameters in INSERT for robustness.
  Sequences, not autoIncrement

Encode upper/lower case into SQL identifiers.
  SQLidAllocate(String) => String
  SPARQLid2SQLid and reverse
    Off ramp only needed => not needed at all but eaier to see what's going on
    
Need to handle connection management to be concurrency and connection pooling friendly.

+ Test for 
   + FILTER and out-of-block variables ; OPTIONAL { FILTER (?x = .. ) ?x :p ?q }
   + Nested optionals with var not used by outer one (bottom up/top down issue)
   + Two optionals with a shared var
