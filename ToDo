==== ARQ ToDo

Check:
 sparql --service=http://dbpedia.org/sparql --post --query getCallingCodes.sparql
 
 PREFIX dbp: <http://dbpedia.org/property/>
 PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
 CONSTRUCT {  ?cntry dbp:callingCode ?code ;
                     rdfs:label ?name .
 } WHERE {
         ?cntry dbp:callingCode ?code .
         OPTIONAL { ?cntry rdfs:label ?name . }
}
 
<bblfish> HTTP Exeception
<bblfish> HttpException: -1 Failed to create RDF request
<bblfish>  at com.hp.hpl.jena.sparql.engine.http.HttpQuery.execPost(HttpQuery.java:224)
<bblfish>  at com.hp.hpl.jena.sparql.engine.http.HttpQuery.exec(HttpQuery.java:127)

++ ** Document "stages" - new form.
++ ** Document "algebra"
++ ** Document "update API"

+ Reconsider OpStage

+ OpService in ref QE.

+  FROM <.....n3>
   but it's application/rdf+xml
   believe MIME type.
   Jena change: FileManager/MimeStream

++ Algebra building src-examples
++ Tutorial on update 
++ ARQ documentation and clearup - adding new storage layers.
   Separate out list PFs like free text.
See ToDoSSE

----

+ OpCompiler: have a global factory so that can use QueryEngineMain and supply subclasses 
  of OpCompiler (experimentation and extensibility for Andreas). 

+ Remove OpDatasetNames?? - only needed in quad compilation for GRAPH ?g {}
  Do that a betetr way (join of all names).
  Special iterator for OpCompiler? 

+ SPARQL/Update - command line tools - arq.update

+ Better syntax as well as SQL-like: GROUP BY ... WITH ... ??

+ FILTER(?x = "abc")
  Extract from exprlist.

+ Results set to note when finished and warn on attempted continued use.

+ Expression printing : expr.toString should not add outer brackets
 
+ Check the better code in QueryIterTriplePattern.TripleMapper 
  Still needs to delay the binding allocation.  
         
+ More dateTime arithmetic and durations
  http://www.w3.org/TR/xpath-functions/#dateTime-arithmetic

+ testing QE/ref and QE/main in the same run
  ?? use a factory list, including tests with no recorded results.
  ?? Could simply factory to have .create() return null for "no".

+ Initial binding for UpdateRequest

== Core

+ OpOrder to take an ExprList 
  Query has a list of sort conditions so need turn SortCondition into an expression

+ FmtUtils and WriterTriple/Node/...
  NodeToLabel maps.

+ ResultsFormat (output)vs ResultSetFormat (input)
  ResultSetFormatter.output as SSE
  ResultSetFactory input as SSE
  rset handler boolean and result set XML forms together => sSPARQLResults.

+ What is "OpDatasetNames" nowadays?
	A table?  unnecessary?
+ Revisit arq.cmd.QueryUtils for printing.

+ Alternative indexes
  LARQ idea - extracted.  Object ==> node/subject
  
+ Commands
  + qtest to use modules (and qexpr)
    ModVersion
  + qparse to test op output

+ DatasetImpl and DataSourceImpl 
    Revisit.
      
== Algebra

+ OpWalker - only used for getting vars, and that needs to truncate a walk.
+ Left join as "join union diff"
+ Table equals (with and without order)
  
== LARQ

+ LARQ assembler

+ Implement IndexBuilderLiter.unindexStatement

+ LARQ Doc internals
  Fields: index, lex/lang/datatype, uri, bnode

== Documentation

+ list handling as a specific page.
  + Internals
  	Query iterators
  	Bindings

+ Writing filter functions [Done]
+ Writing property functions

+ Document making and using datasets
+ Location-mapping and FROM/FROM NAMED
  
== Other

+ XML results: process xml:lang on other elements than just <literal>
  Documentation for XML result set processing
